[2023-03-23T17:09:10.366+0000] {taskinstance.py:1084} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: ETL_finall.ETL scheduled__2023-03-22T00:00:00+00:00 [queued]>
[2023-03-23T17:09:10.383+0000] {taskinstance.py:1084} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: ETL_finall.ETL scheduled__2023-03-22T00:00:00+00:00 [queued]>
[2023-03-23T17:09:10.383+0000] {taskinstance.py:1282} INFO - 
--------------------------------------------------------------------------------
[2023-03-23T17:09:10.384+0000] {taskinstance.py:1283} INFO - Starting attempt 1 of 6
[2023-03-23T17:09:10.392+0000] {taskinstance.py:1284} INFO - 
--------------------------------------------------------------------------------
[2023-03-23T17:09:10.420+0000] {taskinstance.py:1303} INFO - Executing <Task(PythonOperator): ETL> on 2023-03-22 00:00:00+00:00
[2023-03-23T17:09:10.428+0000] {standard_task_runner.py:55} INFO - Started process 6052 to run task
[2023-03-23T17:09:10.432+0000] {standard_task_runner.py:82} INFO - Running: ['***', 'tasks', 'run', 'ETL_finall', 'ETL', 'scheduled__2023-03-22T00:00:00+00:00', '--job-id', '464', '--raw', '--subdir', 'DAGS_FOLDER/DE_ETL.py', '--cfg-path', '/tmp/tmpnrwjg92u']
[2023-03-23T17:09:10.435+0000] {standard_task_runner.py:83} INFO - Job 464: Subtask ETL
[2023-03-23T17:09:10.502+0000] {task_command.py:388} INFO - Running <TaskInstance: ETL_finall.ETL scheduled__2023-03-22T00:00:00+00:00 [running]> on host 7a7b82ed390a
[2023-03-23T17:09:10.580+0000] {taskinstance.py:1511} INFO - Exporting the following env vars:
AIRFLOW_CTX_DAG_OWNER=Mr.Phi
AIRFLOW_CTX_DAG_ID=ETL_finall
AIRFLOW_CTX_TASK_ID=ETL
AIRFLOW_CTX_EXECUTION_DATE=2023-03-22T00:00:00+00:00
AIRFLOW_CTX_TRY_NUMBER=1
AIRFLOW_CTX_DAG_RUN_ID=scheduled__2023-03-22T00:00:00+00:00
[2023-03-23T17:09:11.036+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:11,036 INFO sqlalchemy.engine.Engine SELECT CAST(SERVERPROPERTY('ProductVersion') AS VARCHAR)
[2023-03-23T17:09:11.036+0000] {log.py:128} INFO - SELECT CAST(SERVERPROPERTY('ProductVersion') AS VARCHAR)
[2023-03-23T17:09:11.037+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:11,037 INFO sqlalchemy.engine.Engine [raw sql] ()
[2023-03-23T17:09:11.037+0000] {log.py:128} INFO - [raw sql] ()
[2023-03-23T17:09:11.040+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:11,040 INFO sqlalchemy.engine.Engine SELECT schema_name()
[2023-03-23T17:09:11.040+0000] {log.py:128} INFO - SELECT schema_name()
[2023-03-23T17:09:11.041+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:11,041 INFO sqlalchemy.engine.Engine [generated in 0.00100s] ()
[2023-03-23T17:09:11.041+0000] {log.py:128} INFO - [generated in 0.00100s] ()
[2023-03-23T17:09:11.055+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:11,055 INFO sqlalchemy.engine.Engine SELECT CAST('test max support' AS NVARCHAR(max))
[2023-03-23T17:09:11.055+0000] {log.py:128} INFO - SELECT CAST('test max support' AS NVARCHAR(max))
[2023-03-23T17:09:11.056+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:11,056 INFO sqlalchemy.engine.Engine [generated in 0.00131s] ()
[2023-03-23T17:09:11.056+0000] {log.py:128} INFO - [generated in 0.00131s] ()
[2023-03-23T17:09:11.064+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:11,064 INFO sqlalchemy.engine.Engine SELECT [INFORMATION_SCHEMA].[TABLES].[TABLE_NAME] 
FROM [INFORMATION_SCHEMA].[TABLES] 
WHERE [INFORMATION_SCHEMA].[TABLES].[TABLE_SCHEMA] = CAST(? AS NVARCHAR(max)) AND [INFORMATION_SCHEMA].[TABLES].[TABLE_TYPE] = CAST(? AS NVARCHAR(max)) ORDER BY [INFORMATION_SCHEMA].[TABLES].[TABLE_NAME]
[2023-03-23T17:09:11.064+0000] {log.py:128} INFO - SELECT [INFORMATION_SCHEMA].[TABLES].[TABLE_NAME] 
FROM [INFORMATION_SCHEMA].[TABLES] 
WHERE [INFORMATION_SCHEMA].[TABLES].[TABLE_SCHEMA] = CAST(? AS NVARCHAR(max)) AND [INFORMATION_SCHEMA].[TABLES].[TABLE_TYPE] = CAST(? AS NVARCHAR(max)) ORDER BY [INFORMATION_SCHEMA].[TABLES].[TABLE_NAME]
[2023-03-23T17:09:11.065+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:11,065 INFO sqlalchemy.engine.Engine [generated in 0.00111s] ('dbo', 'BASE TABLE')
[2023-03-23T17:09:11.065+0000] {log.py:128} INFO - [generated in 0.00111s] ('dbo', 'BASE TABLE')
[2023-03-23T17:09:11.085+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:11,085 INFO sqlalchemy.engine.Engine SELECT [INFORMATION_SCHEMA].[TABLES].[TABLE_NAME] 
FROM [INFORMATION_SCHEMA].[TABLES] 
WHERE [INFORMATION_SCHEMA].[TABLES].[TABLE_SCHEMA] = CAST(? AS NVARCHAR(max)) AND [INFORMATION_SCHEMA].[TABLES].[TABLE_TYPE] = CAST(? AS NVARCHAR(max)) ORDER BY [INFORMATION_SCHEMA].[TABLES].[TABLE_NAME]
[2023-03-23T17:09:11.085+0000] {log.py:128} INFO - SELECT [INFORMATION_SCHEMA].[TABLES].[TABLE_NAME] 
FROM [INFORMATION_SCHEMA].[TABLES] 
WHERE [INFORMATION_SCHEMA].[TABLES].[TABLE_SCHEMA] = CAST(? AS NVARCHAR(max)) AND [INFORMATION_SCHEMA].[TABLES].[TABLE_TYPE] = CAST(? AS NVARCHAR(max)) ORDER BY [INFORMATION_SCHEMA].[TABLES].[TABLE_NAME]
[2023-03-23T17:09:11.086+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:11,086 INFO sqlalchemy.engine.Engine [cached since 0.02277s ago] ('dbo', 'VIEW')
[2023-03-23T17:09:11.086+0000] {log.py:128} INFO - [cached since 0.02277s ago] ('dbo', 'VIEW')
[2023-03-23T17:09:11.109+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:11,109 INFO sqlalchemy.engine.Engine SELECT [INFORMATION_SCHEMA].[COLUMNS].[TABLE_SCHEMA], [INFORMATION_SCHEMA].[COLUMNS].[TABLE_NAME], [INFORMATION_SCHEMA].[COLUMNS].[COLUMN_NAME], [INFORMATION_SCHEMA].[COLUMNS].[IS_NULLABLE], [INFORMATION_SCHEMA].[COLUMNS].[DATA_TYPE], [INFORMATION_SCHEMA].[COLUMNS].[ORDINAL_POSITION], [INFORMATION_SCHEMA].[COLUMNS].[CHARACTER_MAXIMUM_LENGTH], [INFORMATION_SCHEMA].[COLUMNS].[NUMERIC_PRECISION], [INFORMATION_SCHEMA].[COLUMNS].[NUMERIC_SCALE], [INFORMATION_SCHEMA].[COLUMNS].[COLUMN_DEFAULT], [INFORMATION_SCHEMA].[COLUMNS].[COLLATION_NAME], sys.computed_columns.definition, sys.computed_columns.is_persisted, sys.identity_columns.is_identity, CAST(sys.identity_columns.seed_value AS NUMERIC) AS seed_value, CAST(sys.identity_columns.increment_value AS NUMERIC) AS increment_value 
FROM [INFORMATION_SCHEMA].[COLUMNS] LEFT OUTER JOIN sys.computed_columns ON sys.computed_columns.object_id = object_id([INFORMATION_SCHEMA].[COLUMNS].[TABLE_SCHEMA] + CAST(? AS NVARCHAR(max)) + [INFORMATION_SCHEMA].[COLUMNS].[TABLE_NAME]) AND sys.computed_columns.name = ([INFORMATION_SCHEMA].[COLUMNS].[COLUMN_NAME] COLLATE DATABASE_DEFAULT) LEFT OUTER JOIN sys.identity_columns ON sys.identity_columns.object_id = object_id([INFORMATION_SCHEMA].[COLUMNS].[TABLE_SCHEMA] + CAST(? AS NVARCHAR(max)) + [INFORMATION_SCHEMA].[COLUMNS].[TABLE_NAME]) AND sys.identity_columns.name = ([INFORMATION_SCHEMA].[COLUMNS].[COLUMN_NAME] COLLATE DATABASE_DEFAULT) 
WHERE [INFORMATION_SCHEMA].[COLUMNS].[TABLE_NAME] = CAST(? AS NVARCHAR(max)) AND [INFORMATION_SCHEMA].[COLUMNS].[TABLE_SCHEMA] = CAST(? AS NVARCHAR(max)) ORDER BY [INFORMATION_SCHEMA].[COLUMNS].[ORDINAL_POSITION]
[2023-03-23T17:09:11.109+0000] {log.py:128} INFO - SELECT [INFORMATION_SCHEMA].[COLUMNS].[TABLE_SCHEMA], [INFORMATION_SCHEMA].[COLUMNS].[TABLE_NAME], [INFORMATION_SCHEMA].[COLUMNS].[COLUMN_NAME], [INFORMATION_SCHEMA].[COLUMNS].[IS_NULLABLE], [INFORMATION_SCHEMA].[COLUMNS].[DATA_TYPE], [INFORMATION_SCHEMA].[COLUMNS].[ORDINAL_POSITION], [INFORMATION_SCHEMA].[COLUMNS].[CHARACTER_MAXIMUM_LENGTH], [INFORMATION_SCHEMA].[COLUMNS].[NUMERIC_PRECISION], [INFORMATION_SCHEMA].[COLUMNS].[NUMERIC_SCALE], [INFORMATION_SCHEMA].[COLUMNS].[COLUMN_DEFAULT], [INFORMATION_SCHEMA].[COLUMNS].[COLLATION_NAME], sys.computed_columns.definition, sys.computed_columns.is_persisted, sys.identity_columns.is_identity, CAST(sys.identity_columns.seed_value AS NUMERIC) AS seed_value, CAST(sys.identity_columns.increment_value AS NUMERIC) AS increment_value 
FROM [INFORMATION_SCHEMA].[COLUMNS] LEFT OUTER JOIN sys.computed_columns ON sys.computed_columns.object_id = object_id([INFORMATION_SCHEMA].[COLUMNS].[TABLE_SCHEMA] + CAST(? AS NVARCHAR(max)) + [INFORMATION_SCHEMA].[COLUMNS].[TABLE_NAME]) AND sys.computed_columns.name = ([INFORMATION_SCHEMA].[COLUMNS].[COLUMN_NAME] COLLATE DATABASE_DEFAULT) LEFT OUTER JOIN sys.identity_columns ON sys.identity_columns.object_id = object_id([INFORMATION_SCHEMA].[COLUMNS].[TABLE_SCHEMA] + CAST(? AS NVARCHAR(max)) + [INFORMATION_SCHEMA].[COLUMNS].[TABLE_NAME]) AND sys.identity_columns.name = ([INFORMATION_SCHEMA].[COLUMNS].[COLUMN_NAME] COLLATE DATABASE_DEFAULT) 
WHERE [INFORMATION_SCHEMA].[COLUMNS].[TABLE_NAME] = CAST(? AS NVARCHAR(max)) AND [INFORMATION_SCHEMA].[COLUMNS].[TABLE_SCHEMA] = CAST(? AS NVARCHAR(max)) ORDER BY [INFORMATION_SCHEMA].[COLUMNS].[ORDINAL_POSITION]
[2023-03-23T17:09:11.110+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:11,110 INFO sqlalchemy.engine.Engine [generated in 0.00118s] ('.', '.', 'jobs_v03', 'dbo')
[2023-03-23T17:09:11.110+0000] {log.py:128} INFO - [generated in 0.00118s] ('.', '.', 'jobs_v03', 'dbo')
[2023-03-23T17:09:11.163+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:11,163 INFO sqlalchemy.engine.Engine SELECT [C].[COLUMN_NAME], [INFORMATION_SCHEMA].[TABLE_CONSTRAINTS].[CONSTRAINT_TYPE], [C].[CONSTRAINT_NAME] 
FROM [INFORMATION_SCHEMA].[KEY_COLUMN_USAGE] AS [C], [INFORMATION_SCHEMA].[TABLE_CONSTRAINTS] 
WHERE [INFORMATION_SCHEMA].[TABLE_CONSTRAINTS].[CONSTRAINT_NAME] = [C].[CONSTRAINT_NAME] AND [INFORMATION_SCHEMA].[TABLE_CONSTRAINTS].[TABLE_SCHEMA] = [C].[TABLE_SCHEMA] AND [C].[TABLE_NAME] = CAST(? AS NVARCHAR(max)) AND [C].[TABLE_SCHEMA] = CAST(? AS NVARCHAR(max)) ORDER BY [INFORMATION_SCHEMA].[TABLE_CONSTRAINTS].[CONSTRAINT_NAME], [C].[ORDINAL_POSITION]
[2023-03-23T17:09:11.163+0000] {log.py:128} INFO - SELECT [C].[COLUMN_NAME], [INFORMATION_SCHEMA].[TABLE_CONSTRAINTS].[CONSTRAINT_TYPE], [C].[CONSTRAINT_NAME] 
FROM [INFORMATION_SCHEMA].[KEY_COLUMN_USAGE] AS [C], [INFORMATION_SCHEMA].[TABLE_CONSTRAINTS] 
WHERE [INFORMATION_SCHEMA].[TABLE_CONSTRAINTS].[CONSTRAINT_NAME] = [C].[CONSTRAINT_NAME] AND [INFORMATION_SCHEMA].[TABLE_CONSTRAINTS].[TABLE_SCHEMA] = [C].[TABLE_SCHEMA] AND [C].[TABLE_NAME] = CAST(? AS NVARCHAR(max)) AND [C].[TABLE_SCHEMA] = CAST(? AS NVARCHAR(max)) ORDER BY [INFORMATION_SCHEMA].[TABLE_CONSTRAINTS].[CONSTRAINT_NAME], [C].[ORDINAL_POSITION]
[2023-03-23T17:09:11.164+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:11,164 INFO sqlalchemy.engine.Engine [generated in 0.00117s] ('jobs_v03', 'dbo')
[2023-03-23T17:09:11.164+0000] {log.py:128} INFO - [generated in 0.00117s] ('jobs_v03', 'dbo')
[2023-03-23T17:09:11.284+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:11,284 INFO sqlalchemy.engine.Engine WITH fk_info AS (
    SELECT
        ischema_ref_con.constraint_schema,
        ischema_ref_con.constraint_name,
        ischema_key_col.ordinal_position,
        ischema_key_col.table_schema,
        ischema_key_col.table_name,
        ischema_ref_con.unique_constraint_schema,
        ischema_ref_con.unique_constraint_name,
        ischema_ref_con.match_option,
        ischema_ref_con.update_rule,
        ischema_ref_con.delete_rule,
        ischema_key_col.column_name AS constrained_column
    FROM
        INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS ischema_ref_con
        INNER JOIN
        INFORMATION_SCHEMA.KEY_COLUMN_USAGE ischema_key_col ON
            ischema_key_col.table_schema = ischema_ref_con.constraint_schema
            AND ischema_key_col.constraint_name =
            ischema_ref_con.constraint_name
    WHERE ischema_key_col.table_name = CAST(? AS NVARCHAR(max))
        AND ischema_key_col.table_schema = CAST(? AS NVARCHAR(max))
),
constraint_info AS (
    SELECT
        ischema_key_col.constraint_schema,
        ischema_key_col.constraint_name,
        ischema_key_col.ordinal_position,
        ischema_key_col.table_schema,
        ischema_key_col.table_name,
        ischema_key_col.column_name
    FROM
        INFORMATION_SCHEMA.KEY_COLUMN_USAGE ischema_key_col
),
index_info AS (
    SELECT
        sys.schemas.name AS index_schema,
        sys.indexes.name AS index_name,
        sys.index_columns.key_ordinal AS ordinal_position,
        sys.schemas.name AS table_schema,
        sys.objects.name AS table_name,
        sys.columns.name AS column_name
    FROM
        sys.indexes
        INNER JOIN
        sys.objects ON
            sys.objects.object_id = sys.indexes.object_id
        INNER JOIN
        sys.schemas ON
            sys.schemas.schema_id = sys.objects.schema_id
        INNER JOIN
        sys.index_columns ON
            sys.index_columns.object_id = sys.objects.object_id
            AND sys.index_columns.index_id = sys.indexes.index_id
        INNER JOIN
        sys.columns ON
            sys.columns.object_id = sys.indexes.object_id
            AND sys.columns.column_id = sys.index_columns.column_id
)
    SELECT
        fk_info.constraint_schema,
        fk_info.constraint_name,
        fk_info.ordinal_position,
        fk_info.constrained_column,
        constraint_info.table_schema AS referred_table_schema,
        constraint_info.table_name AS referred_table_name,
        constraint_info.column_name AS referred_column,
        fk_info.match_option,
        fk_info.update_rule,
        fk_info.delete_rule
    FROM
        fk_info INNER JOIN constraint_info ON
            constraint_info.constraint_schema =
                fk_info.unique_constraint_schema
            AND constraint_info.constraint_name =
                fk_info.unique_constraint_name
            AND constraint_info.ordinal_position = fk_info.ordinal_position
    UNION
    SELECT
        fk_info.constraint_schema,
        fk_info.constraint_name,
        fk_info.ordinal_position,
        fk_info.constrained_column,
        index_info.table_schema AS referred_table_schema,
        index_info.table_name AS referred_table_name,
        index_info.column_name AS referred_column,
        fk_info.match_option,
        fk_info.update_rule,
        fk_info.delete_rule
    FROM
        fk_info INNER JOIN index_info ON
            index_info.index_schema = fk_info.unique_constraint_schema
            AND index_info.index_name = fk_info.unique_constraint_name
            AND index_info.ordinal_position = fk_info.ordinal_position

    ORDER BY fk_info.constraint_schema, fk_info.constraint_name,
        fk_info.ordinal_position
[2023-03-23T17:09:11.284+0000] {log.py:128} INFO - WITH fk_info AS (
    SELECT
        ischema_ref_con.constraint_schema,
        ischema_ref_con.constraint_name,
        ischema_key_col.ordinal_position,
        ischema_key_col.table_schema,
        ischema_key_col.table_name,
        ischema_ref_con.unique_constraint_schema,
        ischema_ref_con.unique_constraint_name,
        ischema_ref_con.match_option,
        ischema_ref_con.update_rule,
        ischema_ref_con.delete_rule,
        ischema_key_col.column_name AS constrained_column
    FROM
        INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS ischema_ref_con
        INNER JOIN
        INFORMATION_SCHEMA.KEY_COLUMN_USAGE ischema_key_col ON
            ischema_key_col.table_schema = ischema_ref_con.constraint_schema
            AND ischema_key_col.constraint_name =
            ischema_ref_con.constraint_name
    WHERE ischema_key_col.table_name = CAST(? AS NVARCHAR(max))
        AND ischema_key_col.table_schema = CAST(? AS NVARCHAR(max))
),
constraint_info AS (
    SELECT
        ischema_key_col.constraint_schema,
        ischema_key_col.constraint_name,
        ischema_key_col.ordinal_position,
        ischema_key_col.table_schema,
        ischema_key_col.table_name,
        ischema_key_col.column_name
    FROM
        INFORMATION_SCHEMA.KEY_COLUMN_USAGE ischema_key_col
),
index_info AS (
    SELECT
        sys.schemas.name AS index_schema,
        sys.indexes.name AS index_name,
        sys.index_columns.key_ordinal AS ordinal_position,
        sys.schemas.name AS table_schema,
        sys.objects.name AS table_name,
        sys.columns.name AS column_name
    FROM
        sys.indexes
        INNER JOIN
        sys.objects ON
            sys.objects.object_id = sys.indexes.object_id
        INNER JOIN
        sys.schemas ON
            sys.schemas.schema_id = sys.objects.schema_id
        INNER JOIN
        sys.index_columns ON
            sys.index_columns.object_id = sys.objects.object_id
            AND sys.index_columns.index_id = sys.indexes.index_id
        INNER JOIN
        sys.columns ON
            sys.columns.object_id = sys.indexes.object_id
            AND sys.columns.column_id = sys.index_columns.column_id
)
    SELECT
        fk_info.constraint_schema,
        fk_info.constraint_name,
        fk_info.ordinal_position,
        fk_info.constrained_column,
        constraint_info.table_schema AS referred_table_schema,
        constraint_info.table_name AS referred_table_name,
        constraint_info.column_name AS referred_column,
        fk_info.match_option,
        fk_info.update_rule,
        fk_info.delete_rule
    FROM
        fk_info INNER JOIN constraint_info ON
            constraint_info.constraint_schema =
                fk_info.unique_constraint_schema
            AND constraint_info.constraint_name =
                fk_info.unique_constraint_name
            AND constraint_info.ordinal_position = fk_info.ordinal_position
    UNION
    SELECT
        fk_info.constraint_schema,
        fk_info.constraint_name,
        fk_info.ordinal_position,
        fk_info.constrained_column,
        index_info.table_schema AS referred_table_schema,
        index_info.table_name AS referred_table_name,
        index_info.column_name AS referred_column,
        fk_info.match_option,
        fk_info.update_rule,
        fk_info.delete_rule
    FROM
        fk_info INNER JOIN index_info ON
            index_info.index_schema = fk_info.unique_constraint_schema
            AND index_info.index_name = fk_info.unique_constraint_name
            AND index_info.ordinal_position = fk_info.ordinal_position

    ORDER BY fk_info.constraint_schema, fk_info.constraint_name,
        fk_info.ordinal_position

[2023-03-23T17:09:11.285+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:11,285 INFO sqlalchemy.engine.Engine [generated in 0.00125s] ('jobs_v03', 'dbo')
[2023-03-23T17:09:11.285+0000] {log.py:128} INFO - [generated in 0.00125s] ('jobs_v03', 'dbo')
[2023-03-23T17:09:11.760+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:11,760 INFO sqlalchemy.engine.Engine select ind.index_id, ind.is_unique, ind.name, ind.filter_definition from sys.indexes as ind join sys.tables as tab on ind.object_id=tab.object_id join sys.schemas as sch on sch.schema_id=tab.schema_id where tab.name = CAST(? AS NVARCHAR(max)) and sch.name=CAST(? AS NVARCHAR(max)) and ind.is_primary_key=0 and ind.type != 0
[2023-03-23T17:09:11.760+0000] {log.py:128} INFO - select ind.index_id, ind.is_unique, ind.name, ind.filter_definition from sys.indexes as ind join sys.tables as tab on ind.object_id=tab.object_id join sys.schemas as sch on sch.schema_id=tab.schema_id where tab.name = CAST(? AS NVARCHAR(max)) and sch.name=CAST(? AS NVARCHAR(max)) and ind.is_primary_key=0 and ind.type != 0
[2023-03-23T17:09:11.761+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:11,761 INFO sqlalchemy.engine.Engine [generated in 0.00124s] ('jobs_v03', 'dbo')
[2023-03-23T17:09:11.761+0000] {log.py:128} INFO - [generated in 0.00124s] ('jobs_v03', 'dbo')
[2023-03-23T17:09:11.790+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:11,790 INFO sqlalchemy.engine.Engine select ind_col.index_id, ind_col.object_id, col.name, ind_col.is_included_column from sys.columns as col join sys.tables as tab on tab.object_id=col.object_id join sys.index_columns as ind_col on (ind_col.column_id=col.column_id and ind_col.object_id=tab.object_id) join sys.schemas as sch on sch.schema_id=tab.schema_id where tab.name=CAST(? AS NVARCHAR(max)) and sch.name=CAST(? AS NVARCHAR(max))
[2023-03-23T17:09:11.790+0000] {log.py:128} INFO - select ind_col.index_id, ind_col.object_id, col.name, ind_col.is_included_column from sys.columns as col join sys.tables as tab on tab.object_id=col.object_id join sys.index_columns as ind_col on (ind_col.column_id=col.column_id and ind_col.object_id=tab.object_id) join sys.schemas as sch on sch.schema_id=tab.schema_id where tab.name=CAST(? AS NVARCHAR(max)) and sch.name=CAST(? AS NVARCHAR(max))
[2023-03-23T17:09:11.792+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:11,792 INFO sqlalchemy.engine.Engine [generated in 0.00131s] ('jobs_v03', 'dbo')
[2023-03-23T17:09:11.792+0000] {log.py:128} INFO - [generated in 0.00131s] ('jobs_v03', 'dbo')
[2023-03-23T17:09:11.837+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:11,837 INFO sqlalchemy.engine.Engine SELECT jobs_v03.id, jobs_v03.query, jobs_v03.job_url, jobs_v03.title, jobs_v03.tags, jobs_v03.address, jobs_v03.at, jobs_v03.last_post, jobs_v03.reason, jobs_v03.description, jobs_v03.skill, jobs_v03.why_work, jobs_v03.salary, jobs_v03.company_url, jobs_v03.company_name, jobs_v03.company_type, jobs_v03.company_people, jobs_v03.company_working_day, jobs_v03.company_ot, jobs_v03.company_nation 
FROM jobs_v03
[2023-03-23T17:09:11.837+0000] {log.py:128} INFO - SELECT jobs_v03.id, jobs_v03.query, jobs_v03.job_url, jobs_v03.title, jobs_v03.tags, jobs_v03.address, jobs_v03.at, jobs_v03.last_post, jobs_v03.reason, jobs_v03.description, jobs_v03.skill, jobs_v03.why_work, jobs_v03.salary, jobs_v03.company_url, jobs_v03.company_name, jobs_v03.company_type, jobs_v03.company_people, jobs_v03.company_working_day, jobs_v03.company_ot, jobs_v03.company_nation 
FROM jobs_v03
[2023-03-23T17:09:11.839+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:11,839 INFO sqlalchemy.engine.Engine [generated in 0.00124s] ()
[2023-03-23T17:09:11.839+0000] {log.py:128} INFO - [generated in 0.00124s] ()
[2023-03-23T17:09:12.133+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:12,133 INFO sqlalchemy.engine.Engine SELECT CAST(SERVERPROPERTY('ProductVersion') AS VARCHAR)
[2023-03-23T17:09:12.133+0000] {log.py:128} INFO - SELECT CAST(SERVERPROPERTY('ProductVersion') AS VARCHAR)
[2023-03-23T17:09:12.134+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:12,134 INFO sqlalchemy.engine.Engine [raw sql] ()
[2023-03-23T17:09:12.134+0000] {log.py:128} INFO - [raw sql] ()
[2023-03-23T17:09:12.138+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:12,138 INFO sqlalchemy.engine.Engine SELECT schema_name()
[2023-03-23T17:09:12.138+0000] {log.py:128} INFO - SELECT schema_name()
[2023-03-23T17:09:12.139+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:12,139 INFO sqlalchemy.engine.Engine [generated in 0.00102s] ()
[2023-03-23T17:09:12.139+0000] {log.py:128} INFO - [generated in 0.00102s] ()
[2023-03-23T17:09:12.154+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:12,154 INFO sqlalchemy.engine.Engine SELECT CAST('test max support' AS NVARCHAR(max))
[2023-03-23T17:09:12.154+0000] {log.py:128} INFO - SELECT CAST('test max support' AS NVARCHAR(max))
[2023-03-23T17:09:12.156+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:12,155 INFO sqlalchemy.engine.Engine [generated in 0.00138s] ()
[2023-03-23T17:09:12.155+0000] {log.py:128} INFO - [generated in 0.00138s] ()
[2023-03-23T17:09:12.162+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:12,162 INFO sqlalchemy.engine.Engine BEGIN (implicit)
[2023-03-23T17:09:12.162+0000] {log.py:128} INFO - BEGIN (implicit)
[2023-03-23T17:09:12.166+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:12,166 INFO sqlalchemy.engine.Engine SELECT [INFORMATION_SCHEMA].[TABLES].[TABLE_NAME], [INFORMATION_SCHEMA].[TABLES].[TABLE_TYPE] 
FROM [INFORMATION_SCHEMA].[TABLES] 
WHERE [INFORMATION_SCHEMA].[TABLES].[TABLE_NAME] = CAST(? AS NVARCHAR(max)) AND [INFORMATION_SCHEMA].[TABLES].[TABLE_SCHEMA] = CAST(? AS NVARCHAR(max))
[2023-03-23T17:09:12.166+0000] {log.py:128} INFO - SELECT [INFORMATION_SCHEMA].[TABLES].[TABLE_NAME], [INFORMATION_SCHEMA].[TABLES].[TABLE_TYPE] 
FROM [INFORMATION_SCHEMA].[TABLES] 
WHERE [INFORMATION_SCHEMA].[TABLES].[TABLE_NAME] = CAST(? AS NVARCHAR(max)) AND [INFORMATION_SCHEMA].[TABLES].[TABLE_SCHEMA] = CAST(? AS NVARCHAR(max))
[2023-03-23T17:09:12.168+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:12,167 INFO sqlalchemy.engine.Engine [generated in 0.00154s] ('job_df', 'dbo')
[2023-03-23T17:09:12.167+0000] {log.py:128} INFO - [generated in 0.00154s] ('job_df', 'dbo')
[2023-03-23T17:09:12.189+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:12,189 INFO sqlalchemy.engine.Engine SELECT [INFORMATION_SCHEMA].[TABLES].[TABLE_NAME], [INFORMATION_SCHEMA].[TABLES].[TABLE_TYPE] 
FROM [INFORMATION_SCHEMA].[TABLES] 
WHERE [INFORMATION_SCHEMA].[TABLES].[TABLE_NAME] = CAST(? AS NVARCHAR(max)) AND [INFORMATION_SCHEMA].[TABLES].[TABLE_SCHEMA] = CAST(? AS NVARCHAR(max))
[2023-03-23T17:09:12.189+0000] {log.py:128} INFO - SELECT [INFORMATION_SCHEMA].[TABLES].[TABLE_NAME], [INFORMATION_SCHEMA].[TABLES].[TABLE_TYPE] 
FROM [INFORMATION_SCHEMA].[TABLES] 
WHERE [INFORMATION_SCHEMA].[TABLES].[TABLE_NAME] = CAST(? AS NVARCHAR(max)) AND [INFORMATION_SCHEMA].[TABLES].[TABLE_SCHEMA] = CAST(? AS NVARCHAR(max))
[2023-03-23T17:09:12.190+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:12,190 INFO sqlalchemy.engine.Engine [cached since 0.02415s ago] ('company_df', 'dbo')
[2023-03-23T17:09:12.190+0000] {log.py:128} INFO - [cached since 0.02415s ago] ('company_df', 'dbo')
[2023-03-23T17:09:12.212+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:12,212 INFO sqlalchemy.engine.Engine 
CREATE TABLE job_df (
	id INTEGER NOT NULL IDENTITY, 
	query VARCHAR(max) NULL, 
	job_url VARCHAR(max) NULL, 
	title VARCHAR(max) NULL, 
	tags VARCHAR(max) NULL, 
	skill VARCHAR(max) NULL, 
	company_name VARCHAR(max) NULL, 
	below_salary INTEGER NULL, 
	upper_salary INTEGER NULL, 
	avg_salary INTEGER NULL, 
	salary_info VARCHAR(max) NULL, 
	PRIMARY KEY (id)
)
[2023-03-23T17:09:12.212+0000] {log.py:128} INFO - 
CREATE TABLE job_df (
	id INTEGER NOT NULL IDENTITY, 
	query VARCHAR(max) NULL, 
	job_url VARCHAR(max) NULL, 
	title VARCHAR(max) NULL, 
	tags VARCHAR(max) NULL, 
	skill VARCHAR(max) NULL, 
	company_name VARCHAR(max) NULL, 
	below_salary INTEGER NULL, 
	upper_salary INTEGER NULL, 
	avg_salary INTEGER NULL, 
	salary_info VARCHAR(max) NULL, 
	PRIMARY KEY (id)
)


[2023-03-23T17:09:12.214+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:12,214 INFO sqlalchemy.engine.Engine [no key 0.00157s] ()
[2023-03-23T17:09:12.214+0000] {log.py:128} INFO - [no key 0.00157s] ()
[2023-03-23T17:09:12.221+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:12,221 INFO sqlalchemy.engine.Engine 
CREATE TABLE company_df (
	company_id INTEGER NOT NULL IDENTITY, 
	company_name VARCHAR(max) NULL, 
	company_type VARCHAR(max) NULL, 
	company_people VARCHAR(max) NULL, 
	company_working_day VARCHAR(max) NULL, 
	company_ot VARCHAR(max) NULL, 
	company_nation VARCHAR(max) NULL, 
	PRIMARY KEY (company_id)
)
[2023-03-23T17:09:12.221+0000] {log.py:128} INFO - 
CREATE TABLE company_df (
	company_id INTEGER NOT NULL IDENTITY, 
	company_name VARCHAR(max) NULL, 
	company_type VARCHAR(max) NULL, 
	company_people VARCHAR(max) NULL, 
	company_working_day VARCHAR(max) NULL, 
	company_ot VARCHAR(max) NULL, 
	company_nation VARCHAR(max) NULL, 
	PRIMARY KEY (company_id)
)


[2023-03-23T17:09:12.222+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:12,222 INFO sqlalchemy.engine.Engine [no key 0.00137s] ()
[2023-03-23T17:09:12.222+0000] {log.py:128} INFO - [no key 0.00137s] ()
[2023-03-23T17:09:12.229+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:12,229 INFO sqlalchemy.engine.Engine COMMIT
[2023-03-23T17:09:12.229+0000] {log.py:128} INFO - COMMIT
[2023-03-23T17:09:12.233+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:12,233 INFO sqlalchemy.engine.Engine SELECT job_url FROM job_df
[2023-03-23T17:09:12.233+0000] {log.py:128} INFO - SELECT job_url FROM job_df
[2023-03-23T17:09:12.234+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:12,234 INFO sqlalchemy.engine.Engine [raw sql] ()
[2023-03-23T17:09:12.234+0000] {log.py:128} INFO - [raw sql] ()
[2023-03-23T17:09:12.244+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:12,244 INFO sqlalchemy.engine.Engine SELECT company_name FROM company_df
[2023-03-23T17:09:12.244+0000] {log.py:128} INFO - SELECT company_name FROM company_df
[2023-03-23T17:09:12.246+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:12,245 INFO sqlalchemy.engine.Engine [raw sql] ()
[2023-03-23T17:09:12.245+0000] {log.py:128} INFO - [raw sql] ()
[2023-03-23T17:09:12.253+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:12,253 INFO sqlalchemy.engine.Engine SELECT TOP 1 id FROM job_df ORDER BY id DESC
[2023-03-23T17:09:12.253+0000] {log.py:128} INFO - SELECT TOP 1 id FROM job_df ORDER BY id DESC
[2023-03-23T17:09:12.255+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:12,254 INFO sqlalchemy.engine.Engine [raw sql] ()
[2023-03-23T17:09:12.254+0000] {log.py:128} INFO - [raw sql] ()
[2023-03-23T17:09:12.264+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:12,264 INFO sqlalchemy.engine.Engine SELECT TOP 1 company_id FROM company_df ORDER BY company_id DESC
[2023-03-23T17:09:12.264+0000] {log.py:128} INFO - SELECT TOP 1 company_id FROM company_df ORDER BY company_id DESC
[2023-03-23T17:09:12.265+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:12,265 INFO sqlalchemy.engine.Engine [raw sql] ()
[2023-03-23T17:09:12.265+0000] {log.py:128} INFO - [raw sql] ()
[2023-03-23T17:09:13.015+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:13,014 INFO sqlalchemy.engine.Engine BEGIN (implicit)
[2023-03-23T17:09:13.014+0000] {log.py:128} INFO - BEGIN (implicit)
[2023-03-23T17:09:13.029+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:13,029 INFO sqlalchemy.engine.Engine SET IDENTITY_INSERT company_df ON
[2023-03-23T17:09:13.029+0000] {log.py:128} INFO - SET IDENTITY_INSERT company_df ON
[2023-03-23T17:09:13.031+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:13,031 INFO sqlalchemy.engine.Engine [raw sql] ()
[2023-03-23T17:09:13.031+0000] {log.py:128} INFO - [raw sql] ()
[2023-03-23T17:09:13.034+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:13,034 INFO sqlalchemy.engine.Engine INSERT INTO company_df (company_id, company_name, company_type, company_people, company_working_day, company_ot, company_nation) VALUES (?, ?, ?, ?, ?, ?, ?)
[2023-03-23T17:09:13.034+0000] {log.py:128} INFO - INSERT INTO company_df (company_id, company_name, company_type, company_people, company_working_day, company_ot, company_nation) VALUES (?, ?, ?, ?, ?, ?, ?)
[2023-03-23T17:09:13.035+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:13,035 INFO sqlalchemy.engine.Engine [generated in 0.01035s] ((1, 'Chotot', 'Product', '151-300', 'Monday - Friday', 'No OT', 'Singapore'), (2, 'Panasonic Vietnam Group – Panasonic R&D Center Vietnam (PRDCV)', 'Outsourcing', '51-150', 'Monday - Friday', 'Extra salary for OT', 'Japan'), (3, 'Cinnamon AI Labs', 'Product', '151-300', 'Monday - Friday', 'Extra salary for OT', 'Japan'), (4, 'DAT Technologies', 'Product', '51-150', 'Monday - Friday', 'No OT', 'Vietnam'), (7, 'Viettel Group', 'Product', '1000+', 'Monday - Friday', 'nan', 'Vietnam'), (9, 'VINBRAIN', 'Product', '51-150', 'Monday - Friday', 'No OT', 'Vietnam'), (10, 'KILALA Communication', 'Product', '1-50', 'Monday - Friday', 'No OT', 'Japan'), (11, 'BAEMIN Vietnam (Woowa Bros.)', 'Product', '301-500', 'Monday - Friday', 'No OT', 'South Korea')  ... displaying 10 of 319 total bound parameter sets ...  (461, 'Techcom Securities', 'Product', '151-300', 'Monday - Saturday', 'No OT', 'Vietnam'), (462, 'EVENT MEDICAL', 'Product', '1-50', 'Monday - Friday', 'No OT', 'United States'))
[2023-03-23T17:09:13.035+0000] {log.py:128} INFO - [generated in 0.01035s] ((1, 'Chotot', 'Product', '151-300', 'Monday - Friday', 'No OT', 'Singapore'), (2, 'Panasonic Vietnam Group – Panasonic R&D Center Vietnam (PRDCV)', 'Outsourcing', '51-150', 'Monday - Friday', 'Extra salary for OT', 'Japan'), (3, 'Cinnamon AI Labs', 'Product', '151-300', 'Monday - Friday', 'Extra salary for OT', 'Japan'), (4, 'DAT Technologies', 'Product', '51-150', 'Monday - Friday', 'No OT', 'Vietnam'), (7, 'Viettel Group', 'Product', '1000+', 'Monday - Friday', 'nan', 'Vietnam'), (9, 'VINBRAIN', 'Product', '51-150', 'Monday - Friday', 'No OT', 'Vietnam'), (10, 'KILALA Communication', 'Product', '1-50', 'Monday - Friday', 'No OT', 'Japan'), (11, 'BAEMIN Vietnam (Woowa Bros.)', 'Product', '301-500', 'Monday - Friday', 'No OT', 'South Korea')  ... displaying 10 of 319 total bound parameter sets ...  (461, 'Techcom Securities', 'Product', '151-300', 'Monday - Saturday', 'No OT', 'Vietnam'), (462, 'EVENT MEDICAL', 'Product', '1-50', 'Monday - Friday', 'No OT', 'United States'))
[2023-03-23T17:09:14.245+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:14,245 INFO sqlalchemy.engine.Engine SET IDENTITY_INSERT company_df OFF
[2023-03-23T17:09:14.245+0000] {log.py:128} INFO - SET IDENTITY_INSERT company_df OFF
[2023-03-23T17:09:14.246+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:14,246 INFO sqlalchemy.engine.Engine [raw sql] ()
[2023-03-23T17:09:14.246+0000] {log.py:128} INFO - [raw sql] ()
[2023-03-23T17:09:14.274+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:14,273 INFO sqlalchemy.engine.Engine SET IDENTITY_INSERT job_df ON
[2023-03-23T17:09:14.273+0000] {log.py:128} INFO - SET IDENTITY_INSERT job_df ON
[2023-03-23T17:09:14.275+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:14,275 INFO sqlalchemy.engine.Engine [raw sql] ()
[2023-03-23T17:09:14.275+0000] {log.py:128} INFO - [raw sql] ()
[2023-03-23T17:09:14.278+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:14,278 INFO sqlalchemy.engine.Engine INSERT INTO job_df (id, query, job_url, title, tags, skill, company_name, below_salary, upper_salary, avg_salary, salary_info) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2023-03-23T17:09:14.278+0000] {log.py:128} INFO - INSERT INTO job_df (id, query, job_url, title, tags, skill, company_name, below_salary, upper_salary, avg_salary, salary_info) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2023-03-23T17:09:14.280+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:14,280 INFO sqlalchemy.engine.Engine [generated in 0.01468s] ((1, 'AI', 'https://itviec.com/it-jobs/senior-ai-engineer-chotot-4539?lab_feature=preview_jd_page', 'Senior AI Engineer', "['Python', 'Cloud']", 'The ideal candidate will have a degree in computer science, mathematics, or a related field, with a minimum of 5 years of experience in machine learn ... (1013 characters truncated) ... un, Cloud Function) is a plus\nMust have excellent verbal and written communication skills, have the ability to deliver concise, actionable solutions', 'Chotot', 0, 0, 0, 'nego'), (2, 'AI', 'https://itviec.com/it-jobs/ai-engineer-senior-leader-panasonic-vietnam-group-panasonic-r-d-center-vietnam-prdcv-4317?lab_feature=preview_jd_page', 'AI Engineer (Senior/ Leader)', "['Python', 'C++', 'Java']", '[General requirements]\n• Vietnamese nationality.\n• University degree or higher.\n• Studied in faculty of mathematics or Informatics in University o ... (726 characters truncated) ... cal leader/Project Leader in AI cloud deployment projects are strong plus.\n• Strong skills in negotiating and communication both verbal and written.', 'Panasonic Vietnam Group – Panasonic R&D Center Vietnam (PRDCV)', 0, 0, 0, 'nego'), (3, 'AI', 'https://itviec.com/it-jobs/project-manager-agile-scrum-cinnamon-ai-labs-1618?lab_feature=preview_jd_page', '(HCM) Project Manager (Agile/ Scrum)', "['Project Manager', 'Agile', 'Scrum']", 'Strong business communication in English and Vietnamese. \nMinimum 2 years of working experience, special hands-on experience in the Project Manager  ... (560 characters truncated) ... ving skills \nAttitude to do everything possible to over-achieve project goals. \nPassion to study more knowledge about technology, especially in AI.', 'Cinnamon AI Labs', 0, 0, 0, 'nego'), (4, 'AI', 'https://itviec.com/it-jobs/solution-architect-javascript-python-fintech-3500-dat-technologies-5448?lab_feature=preview_jd_page', 'Solution Architect JavaScript & Python (Fintech) ~$3500', "['Software Architect', 'Python', 'JavaScript']", 'Bachelor’s or Master’s degree in Engineering, Computer Science;\nAt least 8+ years of working experience as software development with at least 2+ yea ... (1413 characters truncated) ... ation, and solving challenging problems;\nHigh adaptability and flexibility to the rapid changes of the business;\nHigh responsibility and diligence.', 'DAT Technologies', 2500, 3500, 3000, 'full'), (5, 'AI', 'https://itviec.com/it-jobs/20-java-developer-oracle-oop-viettel-group-5539?lab_feature=preview_jd_page', '20 Java Developer (Oracle, OOP)', "['Java', 'OOP', 'Oracle']", 'T?t nghi?p Ð?i h?c b?ng khá tr? lên chuyên ngành CNTT, ÐTVT, Toán tin ?ng d?ng\nÍt nh?t 1 nam kinh nghi?m phát tri?n ?ng d?ng ph?n m?m b?ng ngôn ng?  ... (538 characters truncated) ... ang t? nghiên c?u\nUu tiên ?ng viên có ch?ng ch? qu?c t? c?a Oracle v? phát tri?n ?ng d?ng Java: Java SE, Java EE\nToeic 550 tr? lên ho?c tuong duong', 'Viettel Group', 0, 0, 0, 'nego'), (6, 'AI', 'https://itviec.com/it-jobs/devops-engineer-linux-vinbrain-2919?lab_feature=preview_jd_page', 'DevOps Engineer (Linux)', "['DevOps', 'Linux', 'Cloud']", "Qualifications\nBachelor's degree in a related field or a combination of education and relevant experience\n2+ years of Linux system administration e ... (746 characters truncated) ... ources, perform complex tasks and resolve complex systems problems\nAbility to collaborate with team members.\nAdequate English communication skills.", 'VINBRAIN', 0, 0, 0, 'nego'), (7, 'AI', 'https://itviec.com/it-jobs/junior-frontend-developer-html5-css-javascript-kilala-communication-5340?lab_feature=preview_jd_page', 'Junior Frontend Developer (HTML5, CSS, JavaScript)', "['JavaScript', 'HTML5', 'CSS']", 'K? nang b?t bu?c:\nT?t nghi?p Ð?i h?c/Cao d?ng ngành CNTT ho?c ngành g?n.\nTrên 1 nam kinh nghi?m th?c t? ? v? trí Frontend: HTML, CSS(SASS), Perfect ... (605 characters truncated) ... và MySQL.\nS? d?ng t?t công c? Git (nhu GitHub, BitBucket,...) d? qu?n lý code và làm vi?c nhóm.\nCó kh? nang t? tìm hi?u và x? lý các l?i phát sinh.', 'KILALA Communication', 0, 0, 0, 'nego'), (8, 'AI', 'https://itviec.com/it-jobs/mid-senior-data-engineer-baemin-vietnam-woowa-bros-1110?lab_feature=preview_jd_page', 'Mid/Senior Data Engineer', "['Database', 'NoSQL', 'AWS']", 'Having around 3+ years of experience, preferably in big data infrastructure;\nProficient in common big data toolset in a large-scale environment;\nEx ... (544 characters truncated) ...  cloud-based infrastructure (e.g. AWS, GCP);\nGood communication skills both in Vietnamese & English;\nOpen mindset on learning, and problem-solving;', 'BAEMIN Vietnam (Woowa Bros.)', 0, 0, 0, 'nego')  ... displaying 10 of 319 total bound parameter sets ...  (318, 'software', 'https://itviec.com/it-jobs/software-developer-java-golang-python-techcom-securities-2747?lab_feature=preview_jd_page', 'Software Developer (Java/ Golang/ Python)', "['Java', 'Python', 'Golang']", 'T?t nghi?p d?i h?c chuyên ngành CNTT/K? thu?t ho?c tuong duong (APTech, …)\nN?m v?ng khái ni?m Object Oriented Programming (OOP) và nguyên t?c thi?t  ... (728 characters truncated) ... ?ng và nhi?t huy?t trong công vi?c\nCó k? nang tìm hi?u và gi?i quy?t v?n d?\nCoding có trách nhi?m, gi? code v? sinh\nUu tiên ham thích v? tài chính', 'Techcom Securities', 0, 0, 0, 'nego'), (319, 'software', 'https://itviec.com/it-jobs/software-electronic-engineer-c-c-embedded-event-medical-0652?lab_feature=preview_jd_page', 'Software/Electronic Engineer (C/C++/Embedded)', "['C language', 'C++', 'Embedded']", 'K? su ph?n m?m h? th?ng: T?t nghi?p Ð?i h?c ngành Công ngh? thông tin, tô´i thiê?u 05 nam kinh nghiê?m trong công vi?c l?p trình h? th?ng. \nS? lu?ng ... (708 characters truncated) ... ) ghi rõ các thông tin cá nhân, tóm t?t quá trình h?c t?p, làm vi?c cu?a ba?n thân.\nCMND, CCCD ( sao y )\nB?ng c?p liên quan (sao y ) và b?ng di?m. ', 'EVENT MEDICAL', 0, 0, 0, 'nego'))
[2023-03-23T17:09:14.280+0000] {log.py:128} INFO - [generated in 0.01468s] ((1, 'AI', 'https://itviec.com/it-jobs/senior-ai-engineer-chotot-4539?lab_feature=preview_jd_page', 'Senior AI Engineer', "['Python', 'Cloud']", 'The ideal candidate will have a degree in computer science, mathematics, or a related field, with a minimum of 5 years of experience in machine learn ... (1013 characters truncated) ... un, Cloud Function) is a plus\nMust have excellent verbal and written communication skills, have the ability to deliver concise, actionable solutions', 'Chotot', 0, 0, 0, 'nego'), (2, 'AI', 'https://itviec.com/it-jobs/ai-engineer-senior-leader-panasonic-vietnam-group-panasonic-r-d-center-vietnam-prdcv-4317?lab_feature=preview_jd_page', 'AI Engineer (Senior/ Leader)', "['Python', 'C++', 'Java']", '[General requirements]\n• Vietnamese nationality.\n• University degree or higher.\n• Studied in faculty of mathematics or Informatics in University o ... (726 characters truncated) ... cal leader/Project Leader in AI cloud deployment projects are strong plus.\n• Strong skills in negotiating and communication both verbal and written.', 'Panasonic Vietnam Group – Panasonic R&D Center Vietnam (PRDCV)', 0, 0, 0, 'nego'), (3, 'AI', 'https://itviec.com/it-jobs/project-manager-agile-scrum-cinnamon-ai-labs-1618?lab_feature=preview_jd_page', '(HCM) Project Manager (Agile/ Scrum)', "['Project Manager', 'Agile', 'Scrum']", 'Strong business communication in English and Vietnamese. \nMinimum 2 years of working experience, special hands-on experience in the Project Manager  ... (560 characters truncated) ... ving skills \nAttitude to do everything possible to over-achieve project goals. \nPassion to study more knowledge about technology, especially in AI.', 'Cinnamon AI Labs', 0, 0, 0, 'nego'), (4, 'AI', 'https://itviec.com/it-jobs/solution-architect-javascript-python-fintech-3500-dat-technologies-5448?lab_feature=preview_jd_page', 'Solution Architect JavaScript & Python (Fintech) ~$3500', "['Software Architect', 'Python', 'JavaScript']", 'Bachelor’s or Master’s degree in Engineering, Computer Science;\nAt least 8+ years of working experience as software development with at least 2+ yea ... (1413 characters truncated) ... ation, and solving challenging problems;\nHigh adaptability and flexibility to the rapid changes of the business;\nHigh responsibility and diligence.', 'DAT Technologies', 2500, 3500, 3000, 'full'), (5, 'AI', 'https://itviec.com/it-jobs/20-java-developer-oracle-oop-viettel-group-5539?lab_feature=preview_jd_page', '20 Java Developer (Oracle, OOP)', "['Java', 'OOP', 'Oracle']", 'T?t nghi?p Ð?i h?c b?ng khá tr? lên chuyên ngành CNTT, ÐTVT, Toán tin ?ng d?ng\nÍt nh?t 1 nam kinh nghi?m phát tri?n ?ng d?ng ph?n m?m b?ng ngôn ng?  ... (538 characters truncated) ... ang t? nghiên c?u\nUu tiên ?ng viên có ch?ng ch? qu?c t? c?a Oracle v? phát tri?n ?ng d?ng Java: Java SE, Java EE\nToeic 550 tr? lên ho?c tuong duong', 'Viettel Group', 0, 0, 0, 'nego'), (6, 'AI', 'https://itviec.com/it-jobs/devops-engineer-linux-vinbrain-2919?lab_feature=preview_jd_page', 'DevOps Engineer (Linux)', "['DevOps', 'Linux', 'Cloud']", "Qualifications\nBachelor's degree in a related field or a combination of education and relevant experience\n2+ years of Linux system administration e ... (746 characters truncated) ... ources, perform complex tasks and resolve complex systems problems\nAbility to collaborate with team members.\nAdequate English communication skills.", 'VINBRAIN', 0, 0, 0, 'nego'), (7, 'AI', 'https://itviec.com/it-jobs/junior-frontend-developer-html5-css-javascript-kilala-communication-5340?lab_feature=preview_jd_page', 'Junior Frontend Developer (HTML5, CSS, JavaScript)', "['JavaScript', 'HTML5', 'CSS']", 'K? nang b?t bu?c:\nT?t nghi?p Ð?i h?c/Cao d?ng ngành CNTT ho?c ngành g?n.\nTrên 1 nam kinh nghi?m th?c t? ? v? trí Frontend: HTML, CSS(SASS), Perfect ... (605 characters truncated) ... và MySQL.\nS? d?ng t?t công c? Git (nhu GitHub, BitBucket,...) d? qu?n lý code và làm vi?c nhóm.\nCó kh? nang t? tìm hi?u và x? lý các l?i phát sinh.', 'KILALA Communication', 0, 0, 0, 'nego'), (8, 'AI', 'https://itviec.com/it-jobs/mid-senior-data-engineer-baemin-vietnam-woowa-bros-1110?lab_feature=preview_jd_page', 'Mid/Senior Data Engineer', "['Database', 'NoSQL', 'AWS']", 'Having around 3+ years of experience, preferably in big data infrastructure;\nProficient in common big data toolset in a large-scale environment;\nEx ... (544 characters truncated) ...  cloud-based infrastructure (e.g. AWS, GCP);\nGood communication skills both in Vietnamese & English;\nOpen mindset on learning, and problem-solving;', 'BAEMIN Vietnam (Woowa Bros.)', 0, 0, 0, 'nego')  ... displaying 10 of 319 total bound parameter sets ...  (318, 'software', 'https://itviec.com/it-jobs/software-developer-java-golang-python-techcom-securities-2747?lab_feature=preview_jd_page', 'Software Developer (Java/ Golang/ Python)', "['Java', 'Python', 'Golang']", 'T?t nghi?p d?i h?c chuyên ngành CNTT/K? thu?t ho?c tuong duong (APTech, …)\nN?m v?ng khái ni?m Object Oriented Programming (OOP) và nguyên t?c thi?t  ... (728 characters truncated) ... ?ng và nhi?t huy?t trong công vi?c\nCó k? nang tìm hi?u và gi?i quy?t v?n d?\nCoding có trách nhi?m, gi? code v? sinh\nUu tiên ham thích v? tài chính', 'Techcom Securities', 0, 0, 0, 'nego'), (319, 'software', 'https://itviec.com/it-jobs/software-electronic-engineer-c-c-embedded-event-medical-0652?lab_feature=preview_jd_page', 'Software/Electronic Engineer (C/C++/Embedded)', "['C language', 'C++', 'Embedded']", 'K? su ph?n m?m h? th?ng: T?t nghi?p Ð?i h?c ngành Công ngh? thông tin, tô´i thiê?u 05 nam kinh nghiê?m trong công vi?c l?p trình h? th?ng. \nS? lu?ng ... (708 characters truncated) ... ) ghi rõ các thông tin cá nhân, tóm t?t quá trình h?c t?p, làm vi?c cu?a ba?n thân.\nCMND, CCCD ( sao y )\nB?ng c?p liên quan (sao y ) và b?ng di?m. ', 'EVENT MEDICAL', 0, 0, 0, 'nego'))
[2023-03-23T17:09:15.228+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:15,228 INFO sqlalchemy.engine.Engine SET IDENTITY_INSERT job_df OFF
[2023-03-23T17:09:15.228+0000] {log.py:128} INFO - SET IDENTITY_INSERT job_df OFF
[2023-03-23T17:09:15.229+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:15,229 INFO sqlalchemy.engine.Engine [raw sql] ()
[2023-03-23T17:09:15.229+0000] {log.py:128} INFO - [raw sql] ()
[2023-03-23T17:09:15.243+0000] {logging_mixin.py:137} INFO - 2023-03-23 17:09:15,243 INFO sqlalchemy.engine.Engine COMMIT
[2023-03-23T17:09:15.243+0000] {log.py:128} INFO - COMMIT
[2023-03-23T17:09:15.246+0000] {logging_mixin.py:137} INFO - Load done...
[2023-03-23T17:09:15.247+0000] {python.py:177} INFO - Done. Returned value was: None
[2023-03-23T17:09:15.258+0000] {taskinstance.py:1326} INFO - Marking task as SUCCESS. dag_id=ETL_finall, task_id=ETL, execution_date=20230322T000000, start_date=20230323T170910, end_date=20230323T170915
[2023-03-23T17:09:15.305+0000] {local_task_job.py:212} INFO - Task exited with return code 0
[2023-03-23T17:09:15.324+0000] {taskinstance.py:2585} INFO - 0 downstream tasks scheduled from follow-on schedule check
