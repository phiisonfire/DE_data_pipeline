[2023-03-23T16:10:23.614+0000] {taskinstance.py:1084} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: ETL_v03.ETL manual__2023-03-23T16:10:22.449041+00:00 [queued]>
[2023-03-23T16:10:23.632+0000] {taskinstance.py:1084} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: ETL_v03.ETL manual__2023-03-23T16:10:22.449041+00:00 [queued]>
[2023-03-23T16:10:23.633+0000] {taskinstance.py:1282} INFO - 
--------------------------------------------------------------------------------
[2023-03-23T16:10:23.633+0000] {taskinstance.py:1283} INFO - Starting attempt 1 of 6
[2023-03-23T16:10:23.634+0000] {taskinstance.py:1284} INFO - 
--------------------------------------------------------------------------------
[2023-03-23T16:10:23.659+0000] {taskinstance.py:1303} INFO - Executing <Task(PythonOperator): ETL> on 2023-03-23 16:10:22.449041+00:00
[2023-03-23T16:10:23.668+0000] {standard_task_runner.py:55} INFO - Started process 472 to run task
[2023-03-23T16:10:23.672+0000] {standard_task_runner.py:82} INFO - Running: ['***', 'tasks', 'run', 'ETL_v03', 'ETL', 'manual__2023-03-23T16:10:22.449041+00:00', '--job-id', '459', '--raw', '--subdir', 'DAGS_FOLDER/DE_ETL.py', '--cfg-path', '/tmp/tmpczd38l7m']
[2023-03-23T16:10:23.675+0000] {standard_task_runner.py:83} INFO - Job 459: Subtask ETL
[2023-03-23T16:10:23.775+0000] {task_command.py:388} INFO - Running <TaskInstance: ETL_v03.ETL manual__2023-03-23T16:10:22.449041+00:00 [running]> on host 7a7b82ed390a
[2023-03-23T16:10:23.907+0000] {taskinstance.py:1511} INFO - Exporting the following env vars:
AIRFLOW_CTX_DAG_OWNER=Mr.Phi
AIRFLOW_CTX_DAG_ID=ETL_v03
AIRFLOW_CTX_TASK_ID=ETL
AIRFLOW_CTX_EXECUTION_DATE=2023-03-23T16:10:22.449041+00:00
AIRFLOW_CTX_TRY_NUMBER=1
AIRFLOW_CTX_DAG_RUN_ID=manual__2023-03-23T16:10:22.449041+00:00
[2023-03-23T16:10:24.570+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:24,570 INFO sqlalchemy.engine.Engine SELECT CAST(SERVERPROPERTY('ProductVersion') AS VARCHAR)
[2023-03-23T16:10:24.570+0000] {log.py:128} INFO - SELECT CAST(SERVERPROPERTY('ProductVersion') AS VARCHAR)
[2023-03-23T16:10:24.571+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:24,571 INFO sqlalchemy.engine.Engine [raw sql] ()
[2023-03-23T16:10:24.571+0000] {log.py:128} INFO - [raw sql] ()
[2023-03-23T16:10:24.575+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:24,575 INFO sqlalchemy.engine.Engine SELECT schema_name()
[2023-03-23T16:10:24.575+0000] {log.py:128} INFO - SELECT schema_name()
[2023-03-23T16:10:24.576+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:24,576 INFO sqlalchemy.engine.Engine [generated in 0.00116s] ()
[2023-03-23T16:10:24.576+0000] {log.py:128} INFO - [generated in 0.00116s] ()
[2023-03-23T16:10:24.599+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:24,599 INFO sqlalchemy.engine.Engine SELECT CAST('test max support' AS NVARCHAR(max))
[2023-03-23T16:10:24.599+0000] {log.py:128} INFO - SELECT CAST('test max support' AS NVARCHAR(max))
[2023-03-23T16:10:24.600+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:24,600 INFO sqlalchemy.engine.Engine [generated in 0.00114s] ()
[2023-03-23T16:10:24.600+0000] {log.py:128} INFO - [generated in 0.00114s] ()
[2023-03-23T16:10:24.608+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:24,607 INFO sqlalchemy.engine.Engine SELECT [INFORMATION_SCHEMA].[TABLES].[TABLE_NAME] 
FROM [INFORMATION_SCHEMA].[TABLES] 
WHERE [INFORMATION_SCHEMA].[TABLES].[TABLE_SCHEMA] = CAST(? AS NVARCHAR(max)) AND [INFORMATION_SCHEMA].[TABLES].[TABLE_TYPE] = CAST(? AS NVARCHAR(max)) ORDER BY [INFORMATION_SCHEMA].[TABLES].[TABLE_NAME]
[2023-03-23T16:10:24.607+0000] {log.py:128} INFO - SELECT [INFORMATION_SCHEMA].[TABLES].[TABLE_NAME] 
FROM [INFORMATION_SCHEMA].[TABLES] 
WHERE [INFORMATION_SCHEMA].[TABLES].[TABLE_SCHEMA] = CAST(? AS NVARCHAR(max)) AND [INFORMATION_SCHEMA].[TABLES].[TABLE_TYPE] = CAST(? AS NVARCHAR(max)) ORDER BY [INFORMATION_SCHEMA].[TABLES].[TABLE_NAME]
[2023-03-23T16:10:24.609+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:24,608 INFO sqlalchemy.engine.Engine [generated in 0.00121s] ('dbo', 'BASE TABLE')
[2023-03-23T16:10:24.608+0000] {log.py:128} INFO - [generated in 0.00121s] ('dbo', 'BASE TABLE')
[2023-03-23T16:10:24.640+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:24,640 INFO sqlalchemy.engine.Engine SELECT [INFORMATION_SCHEMA].[TABLES].[TABLE_NAME] 
FROM [INFORMATION_SCHEMA].[TABLES] 
WHERE [INFORMATION_SCHEMA].[TABLES].[TABLE_SCHEMA] = CAST(? AS NVARCHAR(max)) AND [INFORMATION_SCHEMA].[TABLES].[TABLE_TYPE] = CAST(? AS NVARCHAR(max)) ORDER BY [INFORMATION_SCHEMA].[TABLES].[TABLE_NAME]
[2023-03-23T16:10:24.640+0000] {log.py:128} INFO - SELECT [INFORMATION_SCHEMA].[TABLES].[TABLE_NAME] 
FROM [INFORMATION_SCHEMA].[TABLES] 
WHERE [INFORMATION_SCHEMA].[TABLES].[TABLE_SCHEMA] = CAST(? AS NVARCHAR(max)) AND [INFORMATION_SCHEMA].[TABLES].[TABLE_TYPE] = CAST(? AS NVARCHAR(max)) ORDER BY [INFORMATION_SCHEMA].[TABLES].[TABLE_NAME]
[2023-03-23T16:10:24.641+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:24,641 INFO sqlalchemy.engine.Engine [cached since 0.03386s ago] ('dbo', 'VIEW')
[2023-03-23T16:10:24.641+0000] {log.py:128} INFO - [cached since 0.03386s ago] ('dbo', 'VIEW')
[2023-03-23T16:10:24.689+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:24,689 INFO sqlalchemy.engine.Engine SELECT [INFORMATION_SCHEMA].[COLUMNS].[TABLE_SCHEMA], [INFORMATION_SCHEMA].[COLUMNS].[TABLE_NAME], [INFORMATION_SCHEMA].[COLUMNS].[COLUMN_NAME], [INFORMATION_SCHEMA].[COLUMNS].[IS_NULLABLE], [INFORMATION_SCHEMA].[COLUMNS].[DATA_TYPE], [INFORMATION_SCHEMA].[COLUMNS].[ORDINAL_POSITION], [INFORMATION_SCHEMA].[COLUMNS].[CHARACTER_MAXIMUM_LENGTH], [INFORMATION_SCHEMA].[COLUMNS].[NUMERIC_PRECISION], [INFORMATION_SCHEMA].[COLUMNS].[NUMERIC_SCALE], [INFORMATION_SCHEMA].[COLUMNS].[COLUMN_DEFAULT], [INFORMATION_SCHEMA].[COLUMNS].[COLLATION_NAME], sys.computed_columns.definition, sys.computed_columns.is_persisted, sys.identity_columns.is_identity, CAST(sys.identity_columns.seed_value AS NUMERIC) AS seed_value, CAST(sys.identity_columns.increment_value AS NUMERIC) AS increment_value 
FROM [INFORMATION_SCHEMA].[COLUMNS] LEFT OUTER JOIN sys.computed_columns ON sys.computed_columns.object_id = object_id([INFORMATION_SCHEMA].[COLUMNS].[TABLE_SCHEMA] + CAST(? AS NVARCHAR(max)) + [INFORMATION_SCHEMA].[COLUMNS].[TABLE_NAME]) AND sys.computed_columns.name = ([INFORMATION_SCHEMA].[COLUMNS].[COLUMN_NAME] COLLATE DATABASE_DEFAULT) LEFT OUTER JOIN sys.identity_columns ON sys.identity_columns.object_id = object_id([INFORMATION_SCHEMA].[COLUMNS].[TABLE_SCHEMA] + CAST(? AS NVARCHAR(max)) + [INFORMATION_SCHEMA].[COLUMNS].[TABLE_NAME]) AND sys.identity_columns.name = ([INFORMATION_SCHEMA].[COLUMNS].[COLUMN_NAME] COLLATE DATABASE_DEFAULT) 
WHERE [INFORMATION_SCHEMA].[COLUMNS].[TABLE_NAME] = CAST(? AS NVARCHAR(max)) AND [INFORMATION_SCHEMA].[COLUMNS].[TABLE_SCHEMA] = CAST(? AS NVARCHAR(max)) ORDER BY [INFORMATION_SCHEMA].[COLUMNS].[ORDINAL_POSITION]
[2023-03-23T16:10:24.689+0000] {log.py:128} INFO - SELECT [INFORMATION_SCHEMA].[COLUMNS].[TABLE_SCHEMA], [INFORMATION_SCHEMA].[COLUMNS].[TABLE_NAME], [INFORMATION_SCHEMA].[COLUMNS].[COLUMN_NAME], [INFORMATION_SCHEMA].[COLUMNS].[IS_NULLABLE], [INFORMATION_SCHEMA].[COLUMNS].[DATA_TYPE], [INFORMATION_SCHEMA].[COLUMNS].[ORDINAL_POSITION], [INFORMATION_SCHEMA].[COLUMNS].[CHARACTER_MAXIMUM_LENGTH], [INFORMATION_SCHEMA].[COLUMNS].[NUMERIC_PRECISION], [INFORMATION_SCHEMA].[COLUMNS].[NUMERIC_SCALE], [INFORMATION_SCHEMA].[COLUMNS].[COLUMN_DEFAULT], [INFORMATION_SCHEMA].[COLUMNS].[COLLATION_NAME], sys.computed_columns.definition, sys.computed_columns.is_persisted, sys.identity_columns.is_identity, CAST(sys.identity_columns.seed_value AS NUMERIC) AS seed_value, CAST(sys.identity_columns.increment_value AS NUMERIC) AS increment_value 
FROM [INFORMATION_SCHEMA].[COLUMNS] LEFT OUTER JOIN sys.computed_columns ON sys.computed_columns.object_id = object_id([INFORMATION_SCHEMA].[COLUMNS].[TABLE_SCHEMA] + CAST(? AS NVARCHAR(max)) + [INFORMATION_SCHEMA].[COLUMNS].[TABLE_NAME]) AND sys.computed_columns.name = ([INFORMATION_SCHEMA].[COLUMNS].[COLUMN_NAME] COLLATE DATABASE_DEFAULT) LEFT OUTER JOIN sys.identity_columns ON sys.identity_columns.object_id = object_id([INFORMATION_SCHEMA].[COLUMNS].[TABLE_SCHEMA] + CAST(? AS NVARCHAR(max)) + [INFORMATION_SCHEMA].[COLUMNS].[TABLE_NAME]) AND sys.identity_columns.name = ([INFORMATION_SCHEMA].[COLUMNS].[COLUMN_NAME] COLLATE DATABASE_DEFAULT) 
WHERE [INFORMATION_SCHEMA].[COLUMNS].[TABLE_NAME] = CAST(? AS NVARCHAR(max)) AND [INFORMATION_SCHEMA].[COLUMNS].[TABLE_SCHEMA] = CAST(? AS NVARCHAR(max)) ORDER BY [INFORMATION_SCHEMA].[COLUMNS].[ORDINAL_POSITION]
[2023-03-23T16:10:24.690+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:24,690 INFO sqlalchemy.engine.Engine [generated in 0.00121s] ('.', '.', 'jobs_v03', 'dbo')
[2023-03-23T16:10:24.690+0000] {log.py:128} INFO - [generated in 0.00121s] ('.', '.', 'jobs_v03', 'dbo')
[2023-03-23T16:10:24.794+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:24,794 INFO sqlalchemy.engine.Engine SELECT [C].[COLUMN_NAME], [INFORMATION_SCHEMA].[TABLE_CONSTRAINTS].[CONSTRAINT_TYPE], [C].[CONSTRAINT_NAME] 
FROM [INFORMATION_SCHEMA].[KEY_COLUMN_USAGE] AS [C], [INFORMATION_SCHEMA].[TABLE_CONSTRAINTS] 
WHERE [INFORMATION_SCHEMA].[TABLE_CONSTRAINTS].[CONSTRAINT_NAME] = [C].[CONSTRAINT_NAME] AND [INFORMATION_SCHEMA].[TABLE_CONSTRAINTS].[TABLE_SCHEMA] = [C].[TABLE_SCHEMA] AND [C].[TABLE_NAME] = CAST(? AS NVARCHAR(max)) AND [C].[TABLE_SCHEMA] = CAST(? AS NVARCHAR(max)) ORDER BY [INFORMATION_SCHEMA].[TABLE_CONSTRAINTS].[CONSTRAINT_NAME], [C].[ORDINAL_POSITION]
[2023-03-23T16:10:24.794+0000] {log.py:128} INFO - SELECT [C].[COLUMN_NAME], [INFORMATION_SCHEMA].[TABLE_CONSTRAINTS].[CONSTRAINT_TYPE], [C].[CONSTRAINT_NAME] 
FROM [INFORMATION_SCHEMA].[KEY_COLUMN_USAGE] AS [C], [INFORMATION_SCHEMA].[TABLE_CONSTRAINTS] 
WHERE [INFORMATION_SCHEMA].[TABLE_CONSTRAINTS].[CONSTRAINT_NAME] = [C].[CONSTRAINT_NAME] AND [INFORMATION_SCHEMA].[TABLE_CONSTRAINTS].[TABLE_SCHEMA] = [C].[TABLE_SCHEMA] AND [C].[TABLE_NAME] = CAST(? AS NVARCHAR(max)) AND [C].[TABLE_SCHEMA] = CAST(? AS NVARCHAR(max)) ORDER BY [INFORMATION_SCHEMA].[TABLE_CONSTRAINTS].[CONSTRAINT_NAME], [C].[ORDINAL_POSITION]
[2023-03-23T16:10:24.796+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:24,796 INFO sqlalchemy.engine.Engine [generated in 0.00212s] ('jobs_v03', 'dbo')
[2023-03-23T16:10:24.796+0000] {log.py:128} INFO - [generated in 0.00212s] ('jobs_v03', 'dbo')
[2023-03-23T16:10:25.026+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:25,026 INFO sqlalchemy.engine.Engine WITH fk_info AS (
    SELECT
        ischema_ref_con.constraint_schema,
        ischema_ref_con.constraint_name,
        ischema_key_col.ordinal_position,
        ischema_key_col.table_schema,
        ischema_key_col.table_name,
        ischema_ref_con.unique_constraint_schema,
        ischema_ref_con.unique_constraint_name,
        ischema_ref_con.match_option,
        ischema_ref_con.update_rule,
        ischema_ref_con.delete_rule,
        ischema_key_col.column_name AS constrained_column
    FROM
        INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS ischema_ref_con
        INNER JOIN
        INFORMATION_SCHEMA.KEY_COLUMN_USAGE ischema_key_col ON
            ischema_key_col.table_schema = ischema_ref_con.constraint_schema
            AND ischema_key_col.constraint_name =
            ischema_ref_con.constraint_name
    WHERE ischema_key_col.table_name = CAST(? AS NVARCHAR(max))
        AND ischema_key_col.table_schema = CAST(? AS NVARCHAR(max))
),
constraint_info AS (
    SELECT
        ischema_key_col.constraint_schema,
        ischema_key_col.constraint_name,
        ischema_key_col.ordinal_position,
        ischema_key_col.table_schema,
        ischema_key_col.table_name,
        ischema_key_col.column_name
    FROM
        INFORMATION_SCHEMA.KEY_COLUMN_USAGE ischema_key_col
),
index_info AS (
    SELECT
        sys.schemas.name AS index_schema,
        sys.indexes.name AS index_name,
        sys.index_columns.key_ordinal AS ordinal_position,
        sys.schemas.name AS table_schema,
        sys.objects.name AS table_name,
        sys.columns.name AS column_name
    FROM
        sys.indexes
        INNER JOIN
        sys.objects ON
            sys.objects.object_id = sys.indexes.object_id
        INNER JOIN
        sys.schemas ON
            sys.schemas.schema_id = sys.objects.schema_id
        INNER JOIN
        sys.index_columns ON
            sys.index_columns.object_id = sys.objects.object_id
            AND sys.index_columns.index_id = sys.indexes.index_id
        INNER JOIN
        sys.columns ON
            sys.columns.object_id = sys.indexes.object_id
            AND sys.columns.column_id = sys.index_columns.column_id
)
    SELECT
        fk_info.constraint_schema,
        fk_info.constraint_name,
        fk_info.ordinal_position,
        fk_info.constrained_column,
        constraint_info.table_schema AS referred_table_schema,
        constraint_info.table_name AS referred_table_name,
        constraint_info.column_name AS referred_column,
        fk_info.match_option,
        fk_info.update_rule,
        fk_info.delete_rule
    FROM
        fk_info INNER JOIN constraint_info ON
            constraint_info.constraint_schema =
                fk_info.unique_constraint_schema
            AND constraint_info.constraint_name =
                fk_info.unique_constraint_name
            AND constraint_info.ordinal_position = fk_info.ordinal_position
    UNION
    SELECT
        fk_info.constraint_schema,
        fk_info.constraint_name,
        fk_info.ordinal_position,
        fk_info.constrained_column,
        index_info.table_schema AS referred_table_schema,
        index_info.table_name AS referred_table_name,
        index_info.column_name AS referred_column,
        fk_info.match_option,
        fk_info.update_rule,
        fk_info.delete_rule
    FROM
        fk_info INNER JOIN index_info ON
            index_info.index_schema = fk_info.unique_constraint_schema
            AND index_info.index_name = fk_info.unique_constraint_name
            AND index_info.ordinal_position = fk_info.ordinal_position

    ORDER BY fk_info.constraint_schema, fk_info.constraint_name,
        fk_info.ordinal_position
[2023-03-23T16:10:25.026+0000] {log.py:128} INFO - WITH fk_info AS (
    SELECT
        ischema_ref_con.constraint_schema,
        ischema_ref_con.constraint_name,
        ischema_key_col.ordinal_position,
        ischema_key_col.table_schema,
        ischema_key_col.table_name,
        ischema_ref_con.unique_constraint_schema,
        ischema_ref_con.unique_constraint_name,
        ischema_ref_con.match_option,
        ischema_ref_con.update_rule,
        ischema_ref_con.delete_rule,
        ischema_key_col.column_name AS constrained_column
    FROM
        INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS ischema_ref_con
        INNER JOIN
        INFORMATION_SCHEMA.KEY_COLUMN_USAGE ischema_key_col ON
            ischema_key_col.table_schema = ischema_ref_con.constraint_schema
            AND ischema_key_col.constraint_name =
            ischema_ref_con.constraint_name
    WHERE ischema_key_col.table_name = CAST(? AS NVARCHAR(max))
        AND ischema_key_col.table_schema = CAST(? AS NVARCHAR(max))
),
constraint_info AS (
    SELECT
        ischema_key_col.constraint_schema,
        ischema_key_col.constraint_name,
        ischema_key_col.ordinal_position,
        ischema_key_col.table_schema,
        ischema_key_col.table_name,
        ischema_key_col.column_name
    FROM
        INFORMATION_SCHEMA.KEY_COLUMN_USAGE ischema_key_col
),
index_info AS (
    SELECT
        sys.schemas.name AS index_schema,
        sys.indexes.name AS index_name,
        sys.index_columns.key_ordinal AS ordinal_position,
        sys.schemas.name AS table_schema,
        sys.objects.name AS table_name,
        sys.columns.name AS column_name
    FROM
        sys.indexes
        INNER JOIN
        sys.objects ON
            sys.objects.object_id = sys.indexes.object_id
        INNER JOIN
        sys.schemas ON
            sys.schemas.schema_id = sys.objects.schema_id
        INNER JOIN
        sys.index_columns ON
            sys.index_columns.object_id = sys.objects.object_id
            AND sys.index_columns.index_id = sys.indexes.index_id
        INNER JOIN
        sys.columns ON
            sys.columns.object_id = sys.indexes.object_id
            AND sys.columns.column_id = sys.index_columns.column_id
)
    SELECT
        fk_info.constraint_schema,
        fk_info.constraint_name,
        fk_info.ordinal_position,
        fk_info.constrained_column,
        constraint_info.table_schema AS referred_table_schema,
        constraint_info.table_name AS referred_table_name,
        constraint_info.column_name AS referred_column,
        fk_info.match_option,
        fk_info.update_rule,
        fk_info.delete_rule
    FROM
        fk_info INNER JOIN constraint_info ON
            constraint_info.constraint_schema =
                fk_info.unique_constraint_schema
            AND constraint_info.constraint_name =
                fk_info.unique_constraint_name
            AND constraint_info.ordinal_position = fk_info.ordinal_position
    UNION
    SELECT
        fk_info.constraint_schema,
        fk_info.constraint_name,
        fk_info.ordinal_position,
        fk_info.constrained_column,
        index_info.table_schema AS referred_table_schema,
        index_info.table_name AS referred_table_name,
        index_info.column_name AS referred_column,
        fk_info.match_option,
        fk_info.update_rule,
        fk_info.delete_rule
    FROM
        fk_info INNER JOIN index_info ON
            index_info.index_schema = fk_info.unique_constraint_schema
            AND index_info.index_name = fk_info.unique_constraint_name
            AND index_info.ordinal_position = fk_info.ordinal_position

    ORDER BY fk_info.constraint_schema, fk_info.constraint_name,
        fk_info.ordinal_position

[2023-03-23T16:10:25.027+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:25,027 INFO sqlalchemy.engine.Engine [generated in 0.00111s] ('jobs_v03', 'dbo')
[2023-03-23T16:10:25.027+0000] {log.py:128} INFO - [generated in 0.00111s] ('jobs_v03', 'dbo')
[2023-03-23T16:10:27.310+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:27,310 INFO sqlalchemy.engine.Engine select ind.index_id, ind.is_unique, ind.name, ind.filter_definition from sys.indexes as ind join sys.tables as tab on ind.object_id=tab.object_id join sys.schemas as sch on sch.schema_id=tab.schema_id where tab.name = CAST(? AS NVARCHAR(max)) and sch.name=CAST(? AS NVARCHAR(max)) and ind.is_primary_key=0 and ind.type != 0
[2023-03-23T16:10:27.310+0000] {log.py:128} INFO - select ind.index_id, ind.is_unique, ind.name, ind.filter_definition from sys.indexes as ind join sys.tables as tab on ind.object_id=tab.object_id join sys.schemas as sch on sch.schema_id=tab.schema_id where tab.name = CAST(? AS NVARCHAR(max)) and sch.name=CAST(? AS NVARCHAR(max)) and ind.is_primary_key=0 and ind.type != 0
[2023-03-23T16:10:27.311+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:27,311 INFO sqlalchemy.engine.Engine [generated in 0.00142s] ('jobs_v03', 'dbo')
[2023-03-23T16:10:27.311+0000] {log.py:128} INFO - [generated in 0.00142s] ('jobs_v03', 'dbo')
[2023-03-23T16:10:27.365+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:27,365 INFO sqlalchemy.engine.Engine select ind_col.index_id, ind_col.object_id, col.name, ind_col.is_included_column from sys.columns as col join sys.tables as tab on tab.object_id=col.object_id join sys.index_columns as ind_col on (ind_col.column_id=col.column_id and ind_col.object_id=tab.object_id) join sys.schemas as sch on sch.schema_id=tab.schema_id where tab.name=CAST(? AS NVARCHAR(max)) and sch.name=CAST(? AS NVARCHAR(max))
[2023-03-23T16:10:27.365+0000] {log.py:128} INFO - select ind_col.index_id, ind_col.object_id, col.name, ind_col.is_included_column from sys.columns as col join sys.tables as tab on tab.object_id=col.object_id join sys.index_columns as ind_col on (ind_col.column_id=col.column_id and ind_col.object_id=tab.object_id) join sys.schemas as sch on sch.schema_id=tab.schema_id where tab.name=CAST(? AS NVARCHAR(max)) and sch.name=CAST(? AS NVARCHAR(max))
[2023-03-23T16:10:27.367+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:27,366 INFO sqlalchemy.engine.Engine [generated in 0.00165s] ('jobs_v03', 'dbo')
[2023-03-23T16:10:27.366+0000] {log.py:128} INFO - [generated in 0.00165s] ('jobs_v03', 'dbo')
[2023-03-23T16:10:27.446+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:27,445 INFO sqlalchemy.engine.Engine SELECT jobs_v03.id, jobs_v03.query, jobs_v03.job_url, jobs_v03.title, jobs_v03.tags, jobs_v03.address, jobs_v03.at, jobs_v03.last_post, jobs_v03.reason, jobs_v03.description, jobs_v03.skill, jobs_v03.why_work, jobs_v03.salary, jobs_v03.company_url, jobs_v03.company_name, jobs_v03.company_type, jobs_v03.company_people, jobs_v03.company_working_day, jobs_v03.company_ot, jobs_v03.company_nation 
FROM jobs_v03
[2023-03-23T16:10:27.445+0000] {log.py:128} INFO - SELECT jobs_v03.id, jobs_v03.query, jobs_v03.job_url, jobs_v03.title, jobs_v03.tags, jobs_v03.address, jobs_v03.at, jobs_v03.last_post, jobs_v03.reason, jobs_v03.description, jobs_v03.skill, jobs_v03.why_work, jobs_v03.salary, jobs_v03.company_url, jobs_v03.company_name, jobs_v03.company_type, jobs_v03.company_people, jobs_v03.company_working_day, jobs_v03.company_ot, jobs_v03.company_nation 
FROM jobs_v03
[2023-03-23T16:10:27.447+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:27,447 INFO sqlalchemy.engine.Engine [generated in 0.00130s] ()
[2023-03-23T16:10:27.447+0000] {log.py:128} INFO - [generated in 0.00130s] ()
[2023-03-23T16:10:27.813+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:27,813 INFO sqlalchemy.engine.Engine SELECT CAST(SERVERPROPERTY('ProductVersion') AS VARCHAR)
[2023-03-23T16:10:27.813+0000] {log.py:128} INFO - SELECT CAST(SERVERPROPERTY('ProductVersion') AS VARCHAR)
[2023-03-23T16:10:27.814+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:27,814 INFO sqlalchemy.engine.Engine [raw sql] ()
[2023-03-23T16:10:27.814+0000] {log.py:128} INFO - [raw sql] ()
[2023-03-23T16:10:27.820+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:27,820 INFO sqlalchemy.engine.Engine SELECT schema_name()
[2023-03-23T16:10:27.820+0000] {log.py:128} INFO - SELECT schema_name()
[2023-03-23T16:10:27.821+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:27,821 INFO sqlalchemy.engine.Engine [generated in 0.00144s] ()
[2023-03-23T16:10:27.821+0000] {log.py:128} INFO - [generated in 0.00144s] ()
[2023-03-23T16:10:27.850+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:27,850 INFO sqlalchemy.engine.Engine SELECT CAST('test max support' AS NVARCHAR(max))
[2023-03-23T16:10:27.850+0000] {log.py:128} INFO - SELECT CAST('test max support' AS NVARCHAR(max))
[2023-03-23T16:10:27.851+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:27,851 INFO sqlalchemy.engine.Engine [generated in 0.00129s] ()
[2023-03-23T16:10:27.851+0000] {log.py:128} INFO - [generated in 0.00129s] ()
[2023-03-23T16:10:27.858+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:27,858 INFO sqlalchemy.engine.Engine BEGIN (implicit)
[2023-03-23T16:10:27.858+0000] {log.py:128} INFO - BEGIN (implicit)
[2023-03-23T16:10:27.861+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:27,861 INFO sqlalchemy.engine.Engine SELECT [INFORMATION_SCHEMA].[TABLES].[TABLE_NAME], [INFORMATION_SCHEMA].[TABLES].[TABLE_TYPE] 
FROM [INFORMATION_SCHEMA].[TABLES] 
WHERE [INFORMATION_SCHEMA].[TABLES].[TABLE_NAME] = CAST(? AS NVARCHAR(max)) AND [INFORMATION_SCHEMA].[TABLES].[TABLE_SCHEMA] = CAST(? AS NVARCHAR(max))
[2023-03-23T16:10:27.861+0000] {log.py:128} INFO - SELECT [INFORMATION_SCHEMA].[TABLES].[TABLE_NAME], [INFORMATION_SCHEMA].[TABLES].[TABLE_TYPE] 
FROM [INFORMATION_SCHEMA].[TABLES] 
WHERE [INFORMATION_SCHEMA].[TABLES].[TABLE_NAME] = CAST(? AS NVARCHAR(max)) AND [INFORMATION_SCHEMA].[TABLES].[TABLE_SCHEMA] = CAST(? AS NVARCHAR(max))
[2023-03-23T16:10:27.862+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:27,862 INFO sqlalchemy.engine.Engine [generated in 0.00125s] ('job_df', 'dbo')
[2023-03-23T16:10:27.862+0000] {log.py:128} INFO - [generated in 0.00125s] ('job_df', 'dbo')
[2023-03-23T16:10:27.886+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:27,886 INFO sqlalchemy.engine.Engine SELECT [INFORMATION_SCHEMA].[TABLES].[TABLE_NAME], [INFORMATION_SCHEMA].[TABLES].[TABLE_TYPE] 
FROM [INFORMATION_SCHEMA].[TABLES] 
WHERE [INFORMATION_SCHEMA].[TABLES].[TABLE_NAME] = CAST(? AS NVARCHAR(max)) AND [INFORMATION_SCHEMA].[TABLES].[TABLE_SCHEMA] = CAST(? AS NVARCHAR(max))
[2023-03-23T16:10:27.886+0000] {log.py:128} INFO - SELECT [INFORMATION_SCHEMA].[TABLES].[TABLE_NAME], [INFORMATION_SCHEMA].[TABLES].[TABLE_TYPE] 
FROM [INFORMATION_SCHEMA].[TABLES] 
WHERE [INFORMATION_SCHEMA].[TABLES].[TABLE_NAME] = CAST(? AS NVARCHAR(max)) AND [INFORMATION_SCHEMA].[TABLES].[TABLE_SCHEMA] = CAST(? AS NVARCHAR(max))
[2023-03-23T16:10:27.887+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:27,887 INFO sqlalchemy.engine.Engine [cached since 0.02632s ago] ('company_df', 'dbo')
[2023-03-23T16:10:27.887+0000] {log.py:128} INFO - [cached since 0.02632s ago] ('company_df', 'dbo')
[2023-03-23T16:10:27.910+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:27,910 INFO sqlalchemy.engine.Engine 
CREATE TABLE job_df (
	id INTEGER NOT NULL IDENTITY, 
	query VARCHAR(max) NULL, 
	job_url VARCHAR(max) NULL, 
	title VARCHAR(max) NULL, 
	tags VARCHAR(max) NULL, 
	skill VARCHAR(max) NULL, 
	company_name VARCHAR(max) NULL, 
	below_salary INTEGER NULL, 
	upper_salary INTEGER NULL, 
	avg_salary INTEGER NULL, 
	salary_info VARCHAR(max) NULL, 
	PRIMARY KEY (id)
)
[2023-03-23T16:10:27.910+0000] {log.py:128} INFO - 
CREATE TABLE job_df (
	id INTEGER NOT NULL IDENTITY, 
	query VARCHAR(max) NULL, 
	job_url VARCHAR(max) NULL, 
	title VARCHAR(max) NULL, 
	tags VARCHAR(max) NULL, 
	skill VARCHAR(max) NULL, 
	company_name VARCHAR(max) NULL, 
	below_salary INTEGER NULL, 
	upper_salary INTEGER NULL, 
	avg_salary INTEGER NULL, 
	salary_info VARCHAR(max) NULL, 
	PRIMARY KEY (id)
)


[2023-03-23T16:10:27.912+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:27,911 INFO sqlalchemy.engine.Engine [no key 0.00131s] ()
[2023-03-23T16:10:27.911+0000] {log.py:128} INFO - [no key 0.00131s] ()
[2023-03-23T16:10:27.921+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:27,921 INFO sqlalchemy.engine.Engine 
CREATE TABLE company_df (
	company_id INTEGER NOT NULL IDENTITY, 
	company_name VARCHAR(max) NULL, 
	company_type VARCHAR(max) NULL, 
	company_people VARCHAR(max) NULL, 
	company_working_day VARCHAR(max) NULL, 
	company_ot VARCHAR(max) NULL, 
	company_nation VARCHAR(max) NULL, 
	PRIMARY KEY (company_id)
)
[2023-03-23T16:10:27.921+0000] {log.py:128} INFO - 
CREATE TABLE company_df (
	company_id INTEGER NOT NULL IDENTITY, 
	company_name VARCHAR(max) NULL, 
	company_type VARCHAR(max) NULL, 
	company_people VARCHAR(max) NULL, 
	company_working_day VARCHAR(max) NULL, 
	company_ot VARCHAR(max) NULL, 
	company_nation VARCHAR(max) NULL, 
	PRIMARY KEY (company_id)
)


[2023-03-23T16:10:27.922+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:27,922 INFO sqlalchemy.engine.Engine [no key 0.00126s] ()
[2023-03-23T16:10:27.922+0000] {log.py:128} INFO - [no key 0.00126s] ()
[2023-03-23T16:10:27.927+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:27,927 INFO sqlalchemy.engine.Engine COMMIT
[2023-03-23T16:10:27.927+0000] {log.py:128} INFO - COMMIT
[2023-03-23T16:10:27.931+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:27,931 INFO sqlalchemy.engine.Engine SELECT job_url FROM job_df
[2023-03-23T16:10:27.931+0000] {log.py:128} INFO - SELECT job_url FROM job_df
[2023-03-23T16:10:27.932+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:27,932 INFO sqlalchemy.engine.Engine [raw sql] ()
[2023-03-23T16:10:27.932+0000] {log.py:128} INFO - [raw sql] ()
[2023-03-23T16:10:27.942+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:27,942 INFO sqlalchemy.engine.Engine SELECT company_name FROM company_df
[2023-03-23T16:10:27.942+0000] {log.py:128} INFO - SELECT company_name FROM company_df
[2023-03-23T16:10:27.943+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:27,943 INFO sqlalchemy.engine.Engine [raw sql] ()
[2023-03-23T16:10:27.943+0000] {log.py:128} INFO - [raw sql] ()
[2023-03-23T16:10:27.954+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:27,954 INFO sqlalchemy.engine.Engine SELECT TOP 1 id FROM job_df ORDER BY id DESC
[2023-03-23T16:10:27.954+0000] {log.py:128} INFO - SELECT TOP 1 id FROM job_df ORDER BY id DESC
[2023-03-23T16:10:27.957+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:27,956 INFO sqlalchemy.engine.Engine [raw sql] ()
[2023-03-23T16:10:27.956+0000] {log.py:128} INFO - [raw sql] ()
[2023-03-23T16:10:27.967+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:27,967 INFO sqlalchemy.engine.Engine SELECT TOP 1 company_id FROM company_df ORDER BY company_id DESC
[2023-03-23T16:10:27.967+0000] {log.py:128} INFO - SELECT TOP 1 company_id FROM company_df ORDER BY company_id DESC
[2023-03-23T16:10:27.968+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:27,968 INFO sqlalchemy.engine.Engine [raw sql] ()
[2023-03-23T16:10:27.968+0000] {log.py:128} INFO - [raw sql] ()
[2023-03-23T16:10:29.213+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:29,212 INFO sqlalchemy.engine.Engine BEGIN (implicit)
[2023-03-23T16:10:29.212+0000] {log.py:128} INFO - BEGIN (implicit)
[2023-03-23T16:10:29.235+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:29,235 INFO sqlalchemy.engine.Engine SET IDENTITY_INSERT company_df ON
[2023-03-23T16:10:29.235+0000] {log.py:128} INFO - SET IDENTITY_INSERT company_df ON
[2023-03-23T16:10:29.237+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:29,236 INFO sqlalchemy.engine.Engine [raw sql] ()
[2023-03-23T16:10:29.236+0000] {log.py:128} INFO - [raw sql] ()
[2023-03-23T16:10:29.241+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:29,241 INFO sqlalchemy.engine.Engine INSERT INTO company_df (company_id, company_name, company_type, company_people, company_working_day, company_ot, company_nation) VALUES (?, ?, ?, ?, ?, ?, ?)
[2023-03-23T16:10:29.241+0000] {log.py:128} INFO - INSERT INTO company_df (company_id, company_name, company_type, company_people, company_working_day, company_ot, company_nation) VALUES (?, ?, ?, ?, ?, ?, ?)
[2023-03-23T16:10:29.242+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:29,242 INFO sqlalchemy.engine.Engine [generated in 0.01367s] ((0, 'Chotot', 'Product', '151-300', 'Monday - Friday', 'No OT', 'Singapore'), (0, 'Panasonic Vietnam Group – Panasonic R&D Center Vietnam (PRDCV)', 'Outsourcing', '51-150', 'Monday - Friday', 'Extra salary for OT', 'Japan'), (0, 'Cinnamon AI Labs', 'Product', '151-300', 'Monday - Friday', 'Extra salary for OT', 'Japan'), (0, 'DAT Technologies', 'Product', '51-150', 'Monday - Friday', 'No OT', 'Vietnam'), (0, 'Viettel Group', 'Product', '1000+', 'Monday - Friday', 'nan', 'Vietnam'), (0, 'VINBRAIN', 'Product', '51-150', 'Monday - Friday', 'No OT', 'Vietnam'), (0, 'KILALA Communication', 'Product', '1-50', 'Monday - Friday', 'No OT', 'Japan'), (0, 'BAEMIN Vietnam (Woowa Bros.)', 'Product', '301-500', 'Monday - Friday', 'No OT', 'South Korea')  ... displaying 10 of 319 total bound parameter sets ...  (0, 'Techcom Securities', 'Product', '151-300', 'Monday - Saturday', 'No OT', 'Vietnam'), (0, 'EVENT MEDICAL', 'Product', '1-50', 'Monday - Friday', 'No OT', 'United States'))
[2023-03-23T16:10:29.242+0000] {log.py:128} INFO - [generated in 0.01367s] ((0, 'Chotot', 'Product', '151-300', 'Monday - Friday', 'No OT', 'Singapore'), (0, 'Panasonic Vietnam Group – Panasonic R&D Center Vietnam (PRDCV)', 'Outsourcing', '51-150', 'Monday - Friday', 'Extra salary for OT', 'Japan'), (0, 'Cinnamon AI Labs', 'Product', '151-300', 'Monday - Friday', 'Extra salary for OT', 'Japan'), (0, 'DAT Technologies', 'Product', '51-150', 'Monday - Friday', 'No OT', 'Vietnam'), (0, 'Viettel Group', 'Product', '1000+', 'Monday - Friday', 'nan', 'Vietnam'), (0, 'VINBRAIN', 'Product', '51-150', 'Monday - Friday', 'No OT', 'Vietnam'), (0, 'KILALA Communication', 'Product', '1-50', 'Monday - Friday', 'No OT', 'Japan'), (0, 'BAEMIN Vietnam (Woowa Bros.)', 'Product', '301-500', 'Monday - Friday', 'No OT', 'South Korea')  ... displaying 10 of 319 total bound parameter sets ...  (0, 'Techcom Securities', 'Product', '151-300', 'Monday - Saturday', 'No OT', 'Vietnam'), (0, 'EVENT MEDICAL', 'Product', '1-50', 'Monday - Friday', 'No OT', 'United States'))
[2023-03-23T16:10:29.282+0000] {logging_mixin.py:137} INFO - 2023-03-23 16:10:29,281 INFO sqlalchemy.engine.Engine ROLLBACK
[2023-03-23T16:10:29.281+0000] {log.py:128} INFO - ROLLBACK
[2023-03-23T16:10:29.297+0000] {taskinstance.py:1775} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1881, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/dialects/mssql/pyodbc.py", line 650, in do_executemany
    cursor, statement, parameters, context=context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 733, in do_executemany
    cursor.executemany(statement, parameters)
pyodbc.IntegrityError: ('23000', "[23000] [Microsoft][ODBC Driver 17 for SQL Server][SQL Server]Violation of PRIMARY KEY constraint 'PK__company___3E2672357D45CFED'. Cannot insert duplicate key in object 'dbo.company_df'. The duplicate key value is (0). (2627) (SQLExecDirectW)")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/operators/python.py", line 175, in execute
    return_value = self.execute_callable()
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/operators/python.py", line 192, in execute_callable
    return self.python_callable(*self.op_args, **self.op_kwargs)
  File "/opt/airflow/dags/DE_ETL.py", line 218, in etl
    session.commit()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 1451, in commit
    self._transaction.commit(_to_root=self.future)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 829, in commit
    self._prepare_impl()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 808, in _prepare_impl
    self.session.flush()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 3444, in flush
    self._flush(objects)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 3584, in _flush
    transaction.rollback(_capture_exception=True)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/langhelpers.py", line 72, in __exit__
    with_traceback=exc_tb,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 211, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/session.py", line 3544, in _flush
    flush_context.execute()
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 456, in execute
    rec.execute(self)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/unitofwork.py", line 633, in execute
    uow,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 250, in save_obj
    insert,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/orm/persistence.py", line 1098, in _emit_insert_statements
    statement, multiparams, execution_options=execution_options
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1705, in _execute_20
    return meth(self, args_10style, kwargs_10style, execution_options)
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/sql/elements.py", line 335, in _execute_on_connection
    self, multiparams, params, execution_options
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1582, in _execute_clauseelement
    cache_hit=cache_hit,
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1944, in _execute_context
    e, statement, parameters, cursor, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 2125, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/util/compat.py", line 211, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/base.py", line 1881, in _execute_context
    cursor, statement, parameters, context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/dialects/mssql/pyodbc.py", line 650, in do_executemany
    cursor, statement, parameters, context=context
  File "/home/airflow/.local/lib/python3.7/site-packages/sqlalchemy/engine/default.py", line 733, in do_executemany
    cursor.executemany(statement, parameters)
sqlalchemy.exc.IntegrityError: (pyodbc.IntegrityError) ('23000', "[23000] [Microsoft][ODBC Driver 17 for SQL Server][SQL Server]Violation of PRIMARY KEY constraint 'PK__company___3E2672357D45CFED'. Cannot insert duplicate key in object 'dbo.company_df'. The duplicate key value is (0). (2627) (SQLExecDirectW)")
[SQL: INSERT INTO company_df (company_id, company_name, company_type, company_people, company_working_day, company_ot, company_nation) VALUES (?, ?, ?, ?, ?, ?, ?)]
[parameters: ((0, 'Chotot', 'Product', '151-300', 'Monday - Friday', 'No OT', 'Singapore'), (0, 'Panasonic Vietnam Group – Panasonic R&D Center Vietnam (PRDCV)', 'Outsourcing', '51-150', 'Monday - Friday', 'Extra salary for OT', 'Japan'), (0, 'Cinnamon AI Labs', 'Product', '151-300', 'Monday - Friday', 'Extra salary for OT', 'Japan'), (0, 'DAT Technologies', 'Product', '51-150', 'Monday - Friday', 'No OT', 'Vietnam'), (0, 'Viettel Group', 'Product', '1000+', 'Monday - Friday', 'nan', 'Vietnam'), (0, 'VINBRAIN', 'Product', '51-150', 'Monday - Friday', 'No OT', 'Vietnam'), (0, 'KILALA Communication', 'Product', '1-50', 'Monday - Friday', 'No OT', 'Japan'), (0, 'BAEMIN Vietnam (Woowa Bros.)', 'Product', '301-500', 'Monday - Friday', 'No OT', 'South Korea')  ... displaying 10 of 319 total bound parameter sets ...  (0, 'Techcom Securities', 'Product', '151-300', 'Monday - Saturday', 'No OT', 'Vietnam'), (0, 'EVENT MEDICAL', 'Product', '1-50', 'Monday - Friday', 'No OT', 'United States'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj)
[2023-03-23T16:10:29.376+0000] {taskinstance.py:1326} INFO - Marking task as UP_FOR_RETRY. dag_id=ETL_v03, task_id=ETL, execution_date=20230323T161022, start_date=20230323T161023, end_date=20230323T161029
[2023-03-23T16:10:29.404+0000] {standard_task_runner.py:105} ERROR - Failed to execute job 459 for task ETL ((pyodbc.IntegrityError) ('23000', "[23000] [Microsoft][ODBC Driver 17 for SQL Server][SQL Server]Violation of PRIMARY KEY constraint 'PK__company___3E2672357D45CFED'. Cannot insert duplicate key in object 'dbo.company_df'. The duplicate key value is (0). (2627) (SQLExecDirectW)")
[SQL: INSERT INTO company_df (company_id, company_name, company_type, company_people, company_working_day, company_ot, company_nation) VALUES (?, ?, ?, ?, ?, ?, ?)]
[parameters: ((0, 'Chotot', 'Product', '151-300', 'Monday - Friday', 'No OT', 'Singapore'), (0, 'Panasonic Vietnam Group – Panasonic R&D Center Vietnam (PRDCV)', 'Outsourcing', '51-150', 'Monday - Friday', 'Extra salary for OT', 'Japan'), (0, 'Cinnamon AI Labs', 'Product', '151-300', 'Monday - Friday', 'Extra salary for OT', 'Japan'), (0, 'DAT Technologies', 'Product', '51-150', 'Monday - Friday', 'No OT', 'Vietnam'), (0, 'Viettel Group', 'Product', '1000+', 'Monday - Friday', 'nan', 'Vietnam'), (0, 'VINBRAIN', 'Product', '51-150', 'Monday - Friday', 'No OT', 'Vietnam'), (0, 'KILALA Communication', 'Product', '1-50', 'Monday - Friday', 'No OT', 'Japan'), (0, 'BAEMIN Vietnam (Woowa Bros.)', 'Product', '301-500', 'Monday - Friday', 'No OT', 'South Korea')  ... displaying 10 of 319 total bound parameter sets ...  (0, 'Techcom Securities', 'Product', '151-300', 'Monday - Saturday', 'No OT', 'Vietnam'), (0, 'EVENT MEDICAL', 'Product', '1-50', 'Monday - Friday', 'No OT', 'United States'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj); 472)
[2023-03-23T16:10:29.464+0000] {local_task_job.py:212} INFO - Task exited with return code 1
[2023-03-23T16:10:29.485+0000] {taskinstance.py:2585} INFO - 0 downstream tasks scheduled from follow-on schedule check
